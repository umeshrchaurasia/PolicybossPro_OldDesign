// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.borjabravo.readmoretextview.ReadMoreTextView;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutItemRaiseTicketBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llAddComment;

  @NonNull
  public final LinearLayout llviewComment;

  @NonNull
  public final ImageView ticketPhoto;

  @NonNull
  public final TextView txtCRN;

  @NonNull
  public final ImageView txtComment;

  @NonNull
  public final TextView txtTicketCategory;

  @NonNull
  public final ReadMoreTextView txtTicketDesc;

  @NonNull
  public final TextView txtTicketId;

  @NonNull
  public final TextView txtTicketStatus;

  @NonNull
  public final TextView txtproduct;

  @NonNull
  public final ImageView txtview;

  private LayoutItemRaiseTicketBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llAddComment, @NonNull LinearLayout llviewComment,
      @NonNull ImageView ticketPhoto, @NonNull TextView txtCRN, @NonNull ImageView txtComment,
      @NonNull TextView txtTicketCategory, @NonNull ReadMoreTextView txtTicketDesc,
      @NonNull TextView txtTicketId, @NonNull TextView txtTicketStatus,
      @NonNull TextView txtproduct, @NonNull ImageView txtview) {
    this.rootView = rootView;
    this.llAddComment = llAddComment;
    this.llviewComment = llviewComment;
    this.ticketPhoto = ticketPhoto;
    this.txtCRN = txtCRN;
    this.txtComment = txtComment;
    this.txtTicketCategory = txtTicketCategory;
    this.txtTicketDesc = txtTicketDesc;
    this.txtTicketId = txtTicketId;
    this.txtTicketStatus = txtTicketStatus;
    this.txtproduct = txtproduct;
    this.txtview = txtview;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutItemRaiseTicketBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutItemRaiseTicketBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_item_raise_ticket, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutItemRaiseTicketBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.llAddComment;
      LinearLayout llAddComment = rootView.findViewById(id);
      if (llAddComment == null) {
        break missingId;
      }

      id = R.id.llviewComment;
      LinearLayout llviewComment = rootView.findViewById(id);
      if (llviewComment == null) {
        break missingId;
      }

      id = R.id.ticketPhoto;
      ImageView ticketPhoto = rootView.findViewById(id);
      if (ticketPhoto == null) {
        break missingId;
      }

      id = R.id.txtCRN;
      TextView txtCRN = rootView.findViewById(id);
      if (txtCRN == null) {
        break missingId;
      }

      id = R.id.txtComment;
      ImageView txtComment = rootView.findViewById(id);
      if (txtComment == null) {
        break missingId;
      }

      id = R.id.txtTicketCategory;
      TextView txtTicketCategory = rootView.findViewById(id);
      if (txtTicketCategory == null) {
        break missingId;
      }

      id = R.id.txtTicketDesc;
      ReadMoreTextView txtTicketDesc = rootView.findViewById(id);
      if (txtTicketDesc == null) {
        break missingId;
      }

      id = R.id.txtTicketId;
      TextView txtTicketId = rootView.findViewById(id);
      if (txtTicketId == null) {
        break missingId;
      }

      id = R.id.txtTicketStatus;
      TextView txtTicketStatus = rootView.findViewById(id);
      if (txtTicketStatus == null) {
        break missingId;
      }

      id = R.id.txtproduct;
      TextView txtproduct = rootView.findViewById(id);
      if (txtproduct == null) {
        break missingId;
      }

      id = R.id.txtview;
      ImageView txtview = rootView.findViewById(id);
      if (txtview == null) {
        break missingId;
      }

      return new LayoutItemRaiseTicketBinding((LinearLayout) rootView, llAddComment, llviewComment,
          ticketPhoto, txtCRN, txtComment, txtTicketCategory, txtTicketDesc, txtTicketId,
          txtTicketStatus, txtproduct, txtview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
