// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGenerateLeadBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final FrameLayout frame;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final LinearLayout llShareData;

  @NonNull
  public final LinearLayout llVehicleDetails;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final View view;

  private ActivityGenerateLeadBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull FrameLayout frame, @NonNull LinearLayout ll,
      @NonNull LinearLayout llShareData, @NonNull LinearLayout llVehicleDetails,
      @NonNull Toolbar toolbar, @NonNull View view) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.frame = frame;
    this.ll = ll;
    this.llShareData = llShareData;
    this.llVehicleDetails = llVehicleDetails;
    this.toolbar = toolbar;
    this.view = view;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGenerateLeadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGenerateLeadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_generate_lead, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGenerateLeadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.frame;
      FrameLayout frame = rootView.findViewById(id);
      if (frame == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = rootView.findViewById(id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.llShareData;
      LinearLayout llShareData = rootView.findViewById(id);
      if (llShareData == null) {
        break missingId;
      }

      id = R.id.llVehicleDetails;
      LinearLayout llVehicleDetails = rootView.findViewById(id);
      if (llVehicleDetails == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      return new ActivityGenerateLeadBinding((RelativeLayout) rootView, appBar, frame, ll,
          llShareData, llVehicleDetails, toolbar, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
