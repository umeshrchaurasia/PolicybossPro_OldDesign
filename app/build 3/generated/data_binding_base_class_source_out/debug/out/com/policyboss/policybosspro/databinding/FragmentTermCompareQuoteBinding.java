// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTermCompareQuoteBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cvInputDetails;

  @NonNull
  public final TextView filter;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final RecyclerView rvTerm;

  @NonNull
  public final Switch swAddon;

  @NonNull
  public final TextView tvAge;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvCrn;

  @NonNull
  public final TextView tvGender;

  @NonNull
  public final TextView tvPolicyTerm;

  @NonNull
  public final TextView tvSmoker;

  @NonNull
  public final TextView tvSum;

  @NonNull
  public final TextView tvWithAddon;

  @NonNull
  public final TextView tvWithoutAddon;

  private FragmentTermCompareQuoteBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView cardView, @NonNull CardView cvInputDetails, @NonNull TextView filter,
      @NonNull ImageView ivEdit, @NonNull ImageView ivShare, @NonNull RecyclerView rvTerm,
      @NonNull Switch swAddon, @NonNull TextView tvAge, @NonNull TextView tvCount,
      @NonNull TextView tvCrn, @NonNull TextView tvGender, @NonNull TextView tvPolicyTerm,
      @NonNull TextView tvSmoker, @NonNull TextView tvSum, @NonNull TextView tvWithAddon,
      @NonNull TextView tvWithoutAddon) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.cvInputDetails = cvInputDetails;
    this.filter = filter;
    this.ivEdit = ivEdit;
    this.ivShare = ivShare;
    this.rvTerm = rvTerm;
    this.swAddon = swAddon;
    this.tvAge = tvAge;
    this.tvCount = tvCount;
    this.tvCrn = tvCrn;
    this.tvGender = tvGender;
    this.tvPolicyTerm = tvPolicyTerm;
    this.tvSmoker = tvSmoker;
    this.tvSum = tvSum;
    this.tvWithAddon = tvWithAddon;
    this.tvWithoutAddon = tvWithoutAddon;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTermCompareQuoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTermCompareQuoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_term_compare_quote, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTermCompareQuoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cvInputDetails;
      CardView cvInputDetails = rootView.findViewById(id);
      if (cvInputDetails == null) {
        break missingId;
      }

      id = R.id.filter;
      TextView filter = rootView.findViewById(id);
      if (filter == null) {
        break missingId;
      }

      id = R.id.ivEdit;
      ImageView ivEdit = rootView.findViewById(id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.ivShare;
      ImageView ivShare = rootView.findViewById(id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.rvTerm;
      RecyclerView rvTerm = rootView.findViewById(id);
      if (rvTerm == null) {
        break missingId;
      }

      id = R.id.swAddon;
      Switch swAddon = rootView.findViewById(id);
      if (swAddon == null) {
        break missingId;
      }

      id = R.id.tvAge;
      TextView tvAge = rootView.findViewById(id);
      if (tvAge == null) {
        break missingId;
      }

      id = R.id.tvCount;
      TextView tvCount = rootView.findViewById(id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tvCrn;
      TextView tvCrn = rootView.findViewById(id);
      if (tvCrn == null) {
        break missingId;
      }

      id = R.id.tvGender;
      TextView tvGender = rootView.findViewById(id);
      if (tvGender == null) {
        break missingId;
      }

      id = R.id.tvPolicyTerm;
      TextView tvPolicyTerm = rootView.findViewById(id);
      if (tvPolicyTerm == null) {
        break missingId;
      }

      id = R.id.tvSmoker;
      TextView tvSmoker = rootView.findViewById(id);
      if (tvSmoker == null) {
        break missingId;
      }

      id = R.id.tvSum;
      TextView tvSum = rootView.findViewById(id);
      if (tvSum == null) {
        break missingId;
      }

      id = R.id.tvWithAddon;
      TextView tvWithAddon = rootView.findViewById(id);
      if (tvWithAddon == null) {
        break missingId;
      }

      id = R.id.tvWithoutAddon;
      TextView tvWithoutAddon = rootView.findViewById(id);
      if (tvWithoutAddon == null) {
        break missingId;
      }

      return new FragmentTermCompareQuoteBinding((RelativeLayout) rootView, cardView,
          cvInputDetails, filter, ivEdit, ivShare, rvTerm, swAddon, tvAge, tvCount, tvCrn, tvGender,
          tvPolicyTerm, tvSmoker, tvSum, tvWithAddon, tvWithoutAddon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
