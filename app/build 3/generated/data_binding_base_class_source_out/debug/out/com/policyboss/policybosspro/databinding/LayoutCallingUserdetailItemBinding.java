// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCallingUserdetailItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView ivManagerEmail;

  @NonNull
  public final AppCompatImageView ivcall;

  @NonNull
  public final LinearLayout lyEmail;

  @NonNull
  public final LinearLayout lyMobile;

  @NonNull
  public final LinearLayout lyParent;

  @NonNull
  public final TextView txtDesig;

  @NonNull
  public final TextView txtEmail;

  @NonNull
  public final TextView txtMobile;

  @NonNull
  public final TextView txtName;

  private LayoutCallingUserdetailItemBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView ivManagerEmail, @NonNull AppCompatImageView ivcall,
      @NonNull LinearLayout lyEmail, @NonNull LinearLayout lyMobile, @NonNull LinearLayout lyParent,
      @NonNull TextView txtDesig, @NonNull TextView txtEmail, @NonNull TextView txtMobile,
      @NonNull TextView txtName) {
    this.rootView = rootView;
    this.ivManagerEmail = ivManagerEmail;
    this.ivcall = ivcall;
    this.lyEmail = lyEmail;
    this.lyMobile = lyMobile;
    this.lyParent = lyParent;
    this.txtDesig = txtDesig;
    this.txtEmail = txtEmail;
    this.txtMobile = txtMobile;
    this.txtName = txtName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCallingUserdetailItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCallingUserdetailItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_calling_userdetail_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCallingUserdetailItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivManagerEmail;
      AppCompatImageView ivManagerEmail = rootView.findViewById(id);
      if (ivManagerEmail == null) {
        break missingId;
      }

      id = R.id.ivcall;
      AppCompatImageView ivcall = rootView.findViewById(id);
      if (ivcall == null) {
        break missingId;
      }

      id = R.id.lyEmail;
      LinearLayout lyEmail = rootView.findViewById(id);
      if (lyEmail == null) {
        break missingId;
      }

      id = R.id.lyMobile;
      LinearLayout lyMobile = rootView.findViewById(id);
      if (lyMobile == null) {
        break missingId;
      }

      id = R.id.lyParent;
      LinearLayout lyParent = rootView.findViewById(id);
      if (lyParent == null) {
        break missingId;
      }

      id = R.id.txtDesig;
      TextView txtDesig = rootView.findViewById(id);
      if (txtDesig == null) {
        break missingId;
      }

      id = R.id.txtEmail;
      TextView txtEmail = rootView.findViewById(id);
      if (txtEmail == null) {
        break missingId;
      }

      id = R.id.txtMobile;
      TextView txtMobile = rootView.findViewById(id);
      if (txtMobile == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = rootView.findViewById(id);
      if (txtName == null) {
        break missingId;
      }

      return new LayoutCallingUserdetailItemBinding((LinearLayout) rootView, ivManagerEmail, ivcall,
          lyEmail, lyMobile, lyParent, txtDesig, txtEmail, txtMobile, txtName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
