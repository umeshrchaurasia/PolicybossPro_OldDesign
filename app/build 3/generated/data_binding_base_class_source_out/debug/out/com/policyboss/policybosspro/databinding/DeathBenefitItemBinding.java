// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeathBenefitItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout lyParent;

  @NonNull
  public final TableRow tableRow1;

  @NonNull
  public final TableLayout tbParent;

  @NonNull
  public final TextView txtJeevanBenefit;

  @NonNull
  public final TextView txtJeevanPremPaid;

  @NonNull
  public final TextView txtLakhshyaBenefit;

  @NonNull
  public final TextView txtLakhshyaPremPaid;

  @NonNull
  public final TextView txtYear;

  private DeathBenefitItemBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout lyParent,
      @NonNull TableRow tableRow1, @NonNull TableLayout tbParent,
      @NonNull TextView txtJeevanBenefit, @NonNull TextView txtJeevanPremPaid,
      @NonNull TextView txtLakhshyaBenefit, @NonNull TextView txtLakhshyaPremPaid,
      @NonNull TextView txtYear) {
    this.rootView = rootView;
    this.lyParent = lyParent;
    this.tableRow1 = tableRow1;
    this.tbParent = tbParent;
    this.txtJeevanBenefit = txtJeevanBenefit;
    this.txtJeevanPremPaid = txtJeevanPremPaid;
    this.txtLakhshyaBenefit = txtLakhshyaBenefit;
    this.txtLakhshyaPremPaid = txtLakhshyaPremPaid;
    this.txtYear = txtYear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeathBenefitItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeathBenefitItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.death_benefit_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeathBenefitItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout lyParent = (LinearLayout) rootView;

      id = R.id.tableRow1;
      TableRow tableRow1 = rootView.findViewById(id);
      if (tableRow1 == null) {
        break missingId;
      }

      id = R.id.tbParent;
      TableLayout tbParent = rootView.findViewById(id);
      if (tbParent == null) {
        break missingId;
      }

      id = R.id.txtJeevanBenefit;
      TextView txtJeevanBenefit = rootView.findViewById(id);
      if (txtJeevanBenefit == null) {
        break missingId;
      }

      id = R.id.txtJeevanPremPaid;
      TextView txtJeevanPremPaid = rootView.findViewById(id);
      if (txtJeevanPremPaid == null) {
        break missingId;
      }

      id = R.id.txtLakhshyaBenefit;
      TextView txtLakhshyaBenefit = rootView.findViewById(id);
      if (txtLakhshyaBenefit == null) {
        break missingId;
      }

      id = R.id.txtLakhshyaPremPaid;
      TextView txtLakhshyaPremPaid = rootView.findViewById(id);
      if (txtLakhshyaPremPaid == null) {
        break missingId;
      }

      id = R.id.txtYear;
      TextView txtYear = rootView.findViewById(id);
      if (txtYear == null) {
        break missingId;
      }

      return new DeathBenefitItemBinding((LinearLayout) rootView, lyParent, tableRow1, tbParent,
          txtJeevanBenefit, txtJeevanPremPaid, txtLakhshyaBenefit, txtLakhshyaPremPaid, txtYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
