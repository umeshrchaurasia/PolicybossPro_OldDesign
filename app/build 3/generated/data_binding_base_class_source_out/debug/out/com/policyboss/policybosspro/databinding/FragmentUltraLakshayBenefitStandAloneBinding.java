// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUltraLakshayBenefitStandAloneBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView txtAnnualEndOfTermAmnt;

  @NonNull
  public final TextView txtAnnualPrem1yearAmnt;

  @NonNull
  public final TextView txtAnnualPrem2to7Amnt;

  @NonNull
  public final TextView txtAnnualPrem2to7Text;

  @NonNull
  public final TextView txtLumpsumAmnt;

  @NonNull
  public final TextView txtMaturityAfterYearAmnt;

  @NonNull
  public final TextView txtMaturityAfterYearText;

  @NonNull
  public final TextView txtMonthlyforYearAmnt;

  @NonNull
  public final TextView txtMonthlyforYearText;

  @NonNull
  public final TextView txtOnMaturityDateAmnt;

  @NonNull
  public final TextView txtPremTerm;

  private FragmentUltraLakshayBenefitStandAloneBinding(@NonNull LinearLayout rootView,
      @NonNull TextView txtAnnualEndOfTermAmnt, @NonNull TextView txtAnnualPrem1yearAmnt,
      @NonNull TextView txtAnnualPrem2to7Amnt, @NonNull TextView txtAnnualPrem2to7Text,
      @NonNull TextView txtLumpsumAmnt, @NonNull TextView txtMaturityAfterYearAmnt,
      @NonNull TextView txtMaturityAfterYearText, @NonNull TextView txtMonthlyforYearAmnt,
      @NonNull TextView txtMonthlyforYearText, @NonNull TextView txtOnMaturityDateAmnt,
      @NonNull TextView txtPremTerm) {
    this.rootView = rootView;
    this.txtAnnualEndOfTermAmnt = txtAnnualEndOfTermAmnt;
    this.txtAnnualPrem1yearAmnt = txtAnnualPrem1yearAmnt;
    this.txtAnnualPrem2to7Amnt = txtAnnualPrem2to7Amnt;
    this.txtAnnualPrem2to7Text = txtAnnualPrem2to7Text;
    this.txtLumpsumAmnt = txtLumpsumAmnt;
    this.txtMaturityAfterYearAmnt = txtMaturityAfterYearAmnt;
    this.txtMaturityAfterYearText = txtMaturityAfterYearText;
    this.txtMonthlyforYearAmnt = txtMonthlyforYearAmnt;
    this.txtMonthlyforYearText = txtMonthlyforYearText;
    this.txtOnMaturityDateAmnt = txtOnMaturityDateAmnt;
    this.txtPremTerm = txtPremTerm;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUltraLakshayBenefitStandAloneBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUltraLakshayBenefitStandAloneBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ultra_lakshay_benefit_stand_alone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUltraLakshayBenefitStandAloneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.txtAnnualEndOfTermAmnt;
      TextView txtAnnualEndOfTermAmnt = rootView.findViewById(id);
      if (txtAnnualEndOfTermAmnt == null) {
        break missingId;
      }

      id = R.id.txtAnnualPrem1yearAmnt;
      TextView txtAnnualPrem1yearAmnt = rootView.findViewById(id);
      if (txtAnnualPrem1yearAmnt == null) {
        break missingId;
      }

      id = R.id.txtAnnualPrem2to7Amnt;
      TextView txtAnnualPrem2to7Amnt = rootView.findViewById(id);
      if (txtAnnualPrem2to7Amnt == null) {
        break missingId;
      }

      id = R.id.txtAnnualPrem2to7Text;
      TextView txtAnnualPrem2to7Text = rootView.findViewById(id);
      if (txtAnnualPrem2to7Text == null) {
        break missingId;
      }

      id = R.id.txtLumpsumAmnt;
      TextView txtLumpsumAmnt = rootView.findViewById(id);
      if (txtLumpsumAmnt == null) {
        break missingId;
      }

      id = R.id.txtMaturityAfterYearAmnt;
      TextView txtMaturityAfterYearAmnt = rootView.findViewById(id);
      if (txtMaturityAfterYearAmnt == null) {
        break missingId;
      }

      id = R.id.txtMaturityAfterYearText;
      TextView txtMaturityAfterYearText = rootView.findViewById(id);
      if (txtMaturityAfterYearText == null) {
        break missingId;
      }

      id = R.id.txtMonthlyforYearAmnt;
      TextView txtMonthlyforYearAmnt = rootView.findViewById(id);
      if (txtMonthlyforYearAmnt == null) {
        break missingId;
      }

      id = R.id.txtMonthlyforYearText;
      TextView txtMonthlyforYearText = rootView.findViewById(id);
      if (txtMonthlyforYearText == null) {
        break missingId;
      }

      id = R.id.txtOnMaturityDateAmnt;
      TextView txtOnMaturityDateAmnt = rootView.findViewById(id);
      if (txtOnMaturityDateAmnt == null) {
        break missingId;
      }

      id = R.id.txtPremTerm;
      TextView txtPremTerm = rootView.findViewById(id);
      if (txtPremTerm == null) {
        break missingId;
      }

      return new FragmentUltraLakshayBenefitStandAloneBinding((LinearLayout) rootView,
          txtAnnualEndOfTermAmnt, txtAnnualPrem1yearAmnt, txtAnnualPrem2to7Amnt,
          txtAnnualPrem2to7Text, txtLumpsumAmnt, txtMaturityAfterYearAmnt, txtMaturityAfterYearText,
          txtMonthlyforYearAmnt, txtMonthlyforYearText, txtOnMaturityDateAmnt, txtPremTerm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
