// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBofbaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final ImageView imgSearch;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final RecyclerView rvFBAList;

  @NonNull
  public final TextView txtFBAName;

  @NonNull
  public final View view6;

  private FragmentSearchBofbaBinding(@NonNull ConstraintLayout rootView, @NonNull EditText etSearch,
      @NonNull ImageView imgSearch, @NonNull LinearLayout linearLayout2,
      @NonNull RecyclerView rvFBAList, @NonNull TextView txtFBAName, @NonNull View view6) {
    this.rootView = rootView;
    this.etSearch = etSearch;
    this.imgSearch = imgSearch;
    this.linearLayout2 = linearLayout2;
    this.rvFBAList = rvFBAList;
    this.txtFBAName = txtFBAName;
    this.view6 = view6;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBofbaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBofbaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_bofba, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBofbaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etSearch;
      EditText etSearch = rootView.findViewById(id);
      if (etSearch == null) {
        break missingId;
      }

      id = R.id.imgSearch;
      ImageView imgSearch = rootView.findViewById(id);
      if (imgSearch == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = rootView.findViewById(id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.rvFBAList;
      RecyclerView rvFBAList = rootView.findViewById(id);
      if (rvFBAList == null) {
        break missingId;
      }

      id = R.id.txtFBAName;
      TextView txtFBAName = rootView.findViewById(id);
      if (txtFBAName == null) {
        break missingId;
      }

      id = R.id.view6;
      View view6 = rootView.findViewById(id);
      if (view6 == null) {
        break missingId;
      }

      return new FragmentSearchBofbaBinding((ConstraintLayout) rootView, etSearch, imgSearch,
          linearLayout2, rvFBAList, txtFBAName, view6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
