// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentSyncContactBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView CvLeaddashboard;

  @NonNull
  public final CardView CvSync;

  @NonNull
  public final LinearLayout lySync;

  @NonNull
  public final LinearLayout lyTotal;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ProgressBar progressBarButton;

  @NonNull
  public final ProgressBar progressCircular;

  @NonNull
  public final TextView txtCount;

  @NonNull
  public final TextView txtLeaddashboard;

  @NonNull
  public final TextView txtLogCount;

  @NonNull
  public final TextView txtMess;

  @NonNull
  public final TextView txtMessage;

  @NonNull
  public final TextView txtOutput;

  @NonNull
  public final TextView txtPercent;

  @NonNull
  public final TextView txtSubmit;

  @NonNull
  public final TextView txtcontain;

  private ContentSyncContactBinding(@NonNull LinearLayout rootView,
      @NonNull CardView CvLeaddashboard, @NonNull CardView CvSync, @NonNull LinearLayout lySync,
      @NonNull LinearLayout lyTotal, @NonNull ProgressBar progressBar,
      @NonNull ProgressBar progressBarButton, @NonNull ProgressBar progressCircular,
      @NonNull TextView txtCount, @NonNull TextView txtLeaddashboard, @NonNull TextView txtLogCount,
      @NonNull TextView txtMess, @NonNull TextView txtMessage, @NonNull TextView txtOutput,
      @NonNull TextView txtPercent, @NonNull TextView txtSubmit, @NonNull TextView txtcontain) {
    this.rootView = rootView;
    this.CvLeaddashboard = CvLeaddashboard;
    this.CvSync = CvSync;
    this.lySync = lySync;
    this.lyTotal = lyTotal;
    this.progressBar = progressBar;
    this.progressBarButton = progressBarButton;
    this.progressCircular = progressCircular;
    this.txtCount = txtCount;
    this.txtLeaddashboard = txtLeaddashboard;
    this.txtLogCount = txtLogCount;
    this.txtMess = txtMess;
    this.txtMessage = txtMessage;
    this.txtOutput = txtOutput;
    this.txtPercent = txtPercent;
    this.txtSubmit = txtSubmit;
    this.txtcontain = txtcontain;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentSyncContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentSyncContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_sync_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentSyncContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CvLeaddashboard;
      CardView CvLeaddashboard = rootView.findViewById(id);
      if (CvLeaddashboard == null) {
        break missingId;
      }

      id = R.id.CvSync;
      CardView CvSync = rootView.findViewById(id);
      if (CvSync == null) {
        break missingId;
      }

      id = R.id.lySync;
      LinearLayout lySync = rootView.findViewById(id);
      if (lySync == null) {
        break missingId;
      }

      id = R.id.lyTotal;
      LinearLayout lyTotal = rootView.findViewById(id);
      if (lyTotal == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressBarButton;
      ProgressBar progressBarButton = rootView.findViewById(id);
      if (progressBarButton == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      ProgressBar progressCircular = rootView.findViewById(id);
      if (progressCircular == null) {
        break missingId;
      }

      id = R.id.txtCount;
      TextView txtCount = rootView.findViewById(id);
      if (txtCount == null) {
        break missingId;
      }

      id = R.id.txtLeaddashboard;
      TextView txtLeaddashboard = rootView.findViewById(id);
      if (txtLeaddashboard == null) {
        break missingId;
      }

      id = R.id.txtLogCount;
      TextView txtLogCount = rootView.findViewById(id);
      if (txtLogCount == null) {
        break missingId;
      }

      id = R.id.txtMess;
      TextView txtMess = rootView.findViewById(id);
      if (txtMess == null) {
        break missingId;
      }

      id = R.id.txtMessage;
      TextView txtMessage = rootView.findViewById(id);
      if (txtMessage == null) {
        break missingId;
      }

      id = R.id.txtOutput;
      TextView txtOutput = rootView.findViewById(id);
      if (txtOutput == null) {
        break missingId;
      }

      id = R.id.txtPercent;
      TextView txtPercent = rootView.findViewById(id);
      if (txtPercent == null) {
        break missingId;
      }

      id = R.id.txtSubmit;
      TextView txtSubmit = rootView.findViewById(id);
      if (txtSubmit == null) {
        break missingId;
      }

      id = R.id.txtcontain;
      TextView txtcontain = rootView.findViewById(id);
      if (txtcontain == null) {
        break missingId;
      }

      return new ContentSyncContactBinding((LinearLayout) rootView, CvLeaddashboard, CvSync, lySync,
          lyTotal, progressBar, progressBarButton, progressCircular, txtCount, txtLeaddashboard,
          txtLogCount, txtMess, txtMessage, txtOutput, txtPercent, txtSubmit, txtcontain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
