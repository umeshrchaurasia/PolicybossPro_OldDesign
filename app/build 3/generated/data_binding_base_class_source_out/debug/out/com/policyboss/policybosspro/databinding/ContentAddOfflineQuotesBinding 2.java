// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentAddOfflineQuotesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnHome;

  @NonNull
  public final LinearLayout llDocumentUpload;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final RecyclerView rvDocUpload;

  private ContentAddOfflineQuotesBinding(@NonNull RelativeLayout rootView, @NonNull Button btnHome,
      @NonNull LinearLayout llDocumentUpload, @NonNull LinearLayout rootLayout,
      @NonNull RecyclerView rvDocUpload) {
    this.rootView = rootView;
    this.btnHome = btnHome;
    this.llDocumentUpload = llDocumentUpload;
    this.rootLayout = rootLayout;
    this.rvDocUpload = rvDocUpload;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentAddOfflineQuotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentAddOfflineQuotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_add_offline_quotes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentAddOfflineQuotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHome;
      Button btnHome = rootView.findViewById(id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.llDocumentUpload;
      LinearLayout llDocumentUpload = rootView.findViewById(id);
      if (llDocumentUpload == null) {
        break missingId;
      }

      id = R.id.rootLayout;
      LinearLayout rootLayout = rootView.findViewById(id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.rvDocUpload;
      RecyclerView rvDocUpload = rootView.findViewById(id);
      if (rvDocUpload == null) {
        break missingId;
      }

      return new ContentAddOfflineQuotesBinding((RelativeLayout) rootView, btnHome,
          llDocumentUpload, rootLayout, rvDocUpload);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
