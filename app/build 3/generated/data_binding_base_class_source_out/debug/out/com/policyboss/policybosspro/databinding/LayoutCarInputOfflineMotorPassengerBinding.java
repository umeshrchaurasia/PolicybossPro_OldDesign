// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputLayout;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;

public final class LayoutCarInputOfflineMotorPassengerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText acMakeModelEdit;

  @NonNull
  public final AutoCompleteTextView acRto;

  @NonNull
  public final LinearLayout cvNcb;

  @NonNull
  public final EditText etCC;

  @NonNull
  public final EditText etComment;

  @NonNull
  public final EditText etCustomerName;

  @NonNull
  public final EditText etExpDate;

  @NonNull
  public final EditText etExtValue;

  @NonNull
  public final EditText etMfgDate;

  @NonNull
  public final EditText etMobile;

  @NonNull
  public final EditText etRegDate;

  @NonNull
  public final EditText etUsage;

  @NonNull
  public final EditText etfbaSearch;

  @NonNull
  public final EditText etseatingcapacity;

  @NonNull
  public final LinearLayout llNoClaim;

  @NonNull
  public final LinearLayout llVerifyCarDetails;

  @NonNull
  public final LinearLayout llfbaSearch;

  @NonNull
  public final DiscreteSeekBar sbNoClaimBonus;

  @NonNull
  public final EditText spFuelEdit;

  @NonNull
  public final Spinner spInsSubTYpe;

  @NonNull
  public final Spinner spMonth;

  @NonNull
  public final Spinner spNcbPercent;

  @NonNull
  public final Spinner spPrevIns;

  @NonNull
  public final EditText spVarientEdit;

  @NonNull
  public final Spinner spYear;

  @NonNull
  public final Switch swIndividual;

  @NonNull
  public final Switch switchNcb;

  @NonNull
  public final TextInputLayout tilExt;

  @NonNull
  public final EditText tvCarNo;

  @NonNull
  public final TextView tvClaimNo;

  @NonNull
  public final TextView tvClaimYes;

  @NonNull
  public final TextView tvProgress;

  private LayoutCarInputOfflineMotorPassengerBinding(@NonNull ScrollView rootView,
      @NonNull EditText acMakeModelEdit, @NonNull AutoCompleteTextView acRto,
      @NonNull LinearLayout cvNcb, @NonNull EditText etCC, @NonNull EditText etComment,
      @NonNull EditText etCustomerName, @NonNull EditText etExpDate, @NonNull EditText etExtValue,
      @NonNull EditText etMfgDate, @NonNull EditText etMobile, @NonNull EditText etRegDate,
      @NonNull EditText etUsage, @NonNull EditText etfbaSearch, @NonNull EditText etseatingcapacity,
      @NonNull LinearLayout llNoClaim, @NonNull LinearLayout llVerifyCarDetails,
      @NonNull LinearLayout llfbaSearch, @NonNull DiscreteSeekBar sbNoClaimBonus,
      @NonNull EditText spFuelEdit, @NonNull Spinner spInsSubTYpe, @NonNull Spinner spMonth,
      @NonNull Spinner spNcbPercent, @NonNull Spinner spPrevIns, @NonNull EditText spVarientEdit,
      @NonNull Spinner spYear, @NonNull Switch swIndividual, @NonNull Switch switchNcb,
      @NonNull TextInputLayout tilExt, @NonNull EditText tvCarNo, @NonNull TextView tvClaimNo,
      @NonNull TextView tvClaimYes, @NonNull TextView tvProgress) {
    this.rootView = rootView;
    this.acMakeModelEdit = acMakeModelEdit;
    this.acRto = acRto;
    this.cvNcb = cvNcb;
    this.etCC = etCC;
    this.etComment = etComment;
    this.etCustomerName = etCustomerName;
    this.etExpDate = etExpDate;
    this.etExtValue = etExtValue;
    this.etMfgDate = etMfgDate;
    this.etMobile = etMobile;
    this.etRegDate = etRegDate;
    this.etUsage = etUsage;
    this.etfbaSearch = etfbaSearch;
    this.etseatingcapacity = etseatingcapacity;
    this.llNoClaim = llNoClaim;
    this.llVerifyCarDetails = llVerifyCarDetails;
    this.llfbaSearch = llfbaSearch;
    this.sbNoClaimBonus = sbNoClaimBonus;
    this.spFuelEdit = spFuelEdit;
    this.spInsSubTYpe = spInsSubTYpe;
    this.spMonth = spMonth;
    this.spNcbPercent = spNcbPercent;
    this.spPrevIns = spPrevIns;
    this.spVarientEdit = spVarientEdit;
    this.spYear = spYear;
    this.swIndividual = swIndividual;
    this.switchNcb = switchNcb;
    this.tilExt = tilExt;
    this.tvCarNo = tvCarNo;
    this.tvClaimNo = tvClaimNo;
    this.tvClaimYes = tvClaimYes;
    this.tvProgress = tvProgress;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCarInputOfflineMotorPassengerBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCarInputOfflineMotorPassengerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_car_input_offline_motor_passenger, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCarInputOfflineMotorPassengerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acMakeModel_edit;
      EditText acMakeModelEdit = rootView.findViewById(id);
      if (acMakeModelEdit == null) {
        break missingId;
      }

      id = R.id.acRto;
      AutoCompleteTextView acRto = rootView.findViewById(id);
      if (acRto == null) {
        break missingId;
      }

      id = R.id.cvNcb;
      LinearLayout cvNcb = rootView.findViewById(id);
      if (cvNcb == null) {
        break missingId;
      }

      id = R.id.etCC;
      EditText etCC = rootView.findViewById(id);
      if (etCC == null) {
        break missingId;
      }

      id = R.id.etComment;
      EditText etComment = rootView.findViewById(id);
      if (etComment == null) {
        break missingId;
      }

      id = R.id.etCustomerName;
      EditText etCustomerName = rootView.findViewById(id);
      if (etCustomerName == null) {
        break missingId;
      }

      id = R.id.etExpDate;
      EditText etExpDate = rootView.findViewById(id);
      if (etExpDate == null) {
        break missingId;
      }

      id = R.id.etExtValue;
      EditText etExtValue = rootView.findViewById(id);
      if (etExtValue == null) {
        break missingId;
      }

      id = R.id.etMfgDate;
      EditText etMfgDate = rootView.findViewById(id);
      if (etMfgDate == null) {
        break missingId;
      }

      id = R.id.etMobile;
      EditText etMobile = rootView.findViewById(id);
      if (etMobile == null) {
        break missingId;
      }

      id = R.id.etRegDate;
      EditText etRegDate = rootView.findViewById(id);
      if (etRegDate == null) {
        break missingId;
      }

      id = R.id.etUsage;
      EditText etUsage = rootView.findViewById(id);
      if (etUsage == null) {
        break missingId;
      }

      id = R.id.etfbaSearch;
      EditText etfbaSearch = rootView.findViewById(id);
      if (etfbaSearch == null) {
        break missingId;
      }

      id = R.id.etseatingcapacity;
      EditText etseatingcapacity = rootView.findViewById(id);
      if (etseatingcapacity == null) {
        break missingId;
      }

      id = R.id.llNoClaim;
      LinearLayout llNoClaim = rootView.findViewById(id);
      if (llNoClaim == null) {
        break missingId;
      }

      id = R.id.llVerifyCarDetails;
      LinearLayout llVerifyCarDetails = rootView.findViewById(id);
      if (llVerifyCarDetails == null) {
        break missingId;
      }

      id = R.id.llfbaSearch;
      LinearLayout llfbaSearch = rootView.findViewById(id);
      if (llfbaSearch == null) {
        break missingId;
      }

      id = R.id.sbNoClaimBonus;
      DiscreteSeekBar sbNoClaimBonus = rootView.findViewById(id);
      if (sbNoClaimBonus == null) {
        break missingId;
      }

      id = R.id.spFuel_edit;
      EditText spFuelEdit = rootView.findViewById(id);
      if (spFuelEdit == null) {
        break missingId;
      }

      id = R.id.spInsSubTYpe;
      Spinner spInsSubTYpe = rootView.findViewById(id);
      if (spInsSubTYpe == null) {
        break missingId;
      }

      id = R.id.spMonth;
      Spinner spMonth = rootView.findViewById(id);
      if (spMonth == null) {
        break missingId;
      }

      id = R.id.spNcbPercent;
      Spinner spNcbPercent = rootView.findViewById(id);
      if (spNcbPercent == null) {
        break missingId;
      }

      id = R.id.spPrevIns;
      Spinner spPrevIns = rootView.findViewById(id);
      if (spPrevIns == null) {
        break missingId;
      }

      id = R.id.spVarient_edit;
      EditText spVarientEdit = rootView.findViewById(id);
      if (spVarientEdit == null) {
        break missingId;
      }

      id = R.id.spYear;
      Spinner spYear = rootView.findViewById(id);
      if (spYear == null) {
        break missingId;
      }

      id = R.id.swIndividual;
      Switch swIndividual = rootView.findViewById(id);
      if (swIndividual == null) {
        break missingId;
      }

      id = R.id.switchNcb;
      Switch switchNcb = rootView.findViewById(id);
      if (switchNcb == null) {
        break missingId;
      }

      id = R.id.tilExt;
      TextInputLayout tilExt = rootView.findViewById(id);
      if (tilExt == null) {
        break missingId;
      }

      id = R.id.tvCarNo;
      EditText tvCarNo = rootView.findViewById(id);
      if (tvCarNo == null) {
        break missingId;
      }

      id = R.id.tvClaimNo;
      TextView tvClaimNo = rootView.findViewById(id);
      if (tvClaimNo == null) {
        break missingId;
      }

      id = R.id.tvClaimYes;
      TextView tvClaimYes = rootView.findViewById(id);
      if (tvClaimYes == null) {
        break missingId;
      }

      id = R.id.tvProgress;
      TextView tvProgress = rootView.findViewById(id);
      if (tvProgress == null) {
        break missingId;
      }

      return new LayoutCarInputOfflineMotorPassengerBinding((ScrollView) rootView, acMakeModelEdit,
          acRto, cvNcb, etCC, etComment, etCustomerName, etExpDate, etExtValue, etMfgDate, etMobile,
          etRegDate, etUsage, etfbaSearch, etseatingcapacity, llNoClaim, llVerifyCarDetails,
          llfbaSearch, sbNoClaimBonus, spFuelEdit, spInsSubTYpe, spMonth, spNcbPercent, spPrevIns,
          spVarientEdit, spYear, swIndividual, switchNcb, tilExt, tvCarNo, tvClaimNo, tvClaimYes,
          tvProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
