// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DrawerHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivAdd;

  @NonNull
  public final ImageView ivCancel;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout lstswitchChildUser;

  @NonNull
  public final LinearLayout lstswitchuser;

  @NonNull
  public final TextView txtDetails;

  @NonNull
  public final TextView txtEntityName;

  @NonNull
  public final TextView txtErpID;

  @NonNull
  public final TextView txtFbaID;

  @NonNull
  public final TextView txtPospNo;

  @NonNull
  public final TextView txtReferalCode;

  @NonNull
  public final TextView txtchilduser;

  @NonNull
  public final TextView txtknwyour;

  @NonNull
  public final TextView txtparentuser;

  @NonNull
  public final TextView txtswitchuser;

  private DrawerHeaderBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivAdd,
      @NonNull ImageView ivCancel, @NonNull ImageView ivProfile, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout lstswitchChildUser, @NonNull LinearLayout lstswitchuser,
      @NonNull TextView txtDetails, @NonNull TextView txtEntityName, @NonNull TextView txtErpID,
      @NonNull TextView txtFbaID, @NonNull TextView txtPospNo, @NonNull TextView txtReferalCode,
      @NonNull TextView txtchilduser, @NonNull TextView txtknwyour, @NonNull TextView txtparentuser,
      @NonNull TextView txtswitchuser) {
    this.rootView = rootView;
    this.ivAdd = ivAdd;
    this.ivCancel = ivCancel;
    this.ivProfile = ivProfile;
    this.linearLayout = linearLayout;
    this.lstswitchChildUser = lstswitchChildUser;
    this.lstswitchuser = lstswitchuser;
    this.txtDetails = txtDetails;
    this.txtEntityName = txtEntityName;
    this.txtErpID = txtErpID;
    this.txtFbaID = txtFbaID;
    this.txtPospNo = txtPospNo;
    this.txtReferalCode = txtReferalCode;
    this.txtchilduser = txtchilduser;
    this.txtknwyour = txtknwyour;
    this.txtparentuser = txtparentuser;
    this.txtswitchuser = txtswitchuser;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrawerHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrawerHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drawer_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrawerHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivAdd;
      ImageView ivAdd = rootView.findViewById(id);
      if (ivAdd == null) {
        break missingId;
      }

      id = R.id.ivCancel;
      ImageView ivCancel = rootView.findViewById(id);
      if (ivCancel == null) {
        break missingId;
      }

      id = R.id.ivProfile;
      ImageView ivProfile = rootView.findViewById(id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.lstswitchChild_user;
      LinearLayout lstswitchChildUser = rootView.findViewById(id);
      if (lstswitchChildUser == null) {
        break missingId;
      }

      id = R.id.lstswitchuser;
      LinearLayout lstswitchuser = rootView.findViewById(id);
      if (lstswitchuser == null) {
        break missingId;
      }

      id = R.id.txtDetails;
      TextView txtDetails = rootView.findViewById(id);
      if (txtDetails == null) {
        break missingId;
      }

      id = R.id.txtEntityName;
      TextView txtEntityName = rootView.findViewById(id);
      if (txtEntityName == null) {
        break missingId;
      }

      id = R.id.txtErpID;
      TextView txtErpID = rootView.findViewById(id);
      if (txtErpID == null) {
        break missingId;
      }

      id = R.id.txtFbaID;
      TextView txtFbaID = rootView.findViewById(id);
      if (txtFbaID == null) {
        break missingId;
      }

      id = R.id.txtPospNo;
      TextView txtPospNo = rootView.findViewById(id);
      if (txtPospNo == null) {
        break missingId;
      }

      id = R.id.txtReferalCode;
      TextView txtReferalCode = rootView.findViewById(id);
      if (txtReferalCode == null) {
        break missingId;
      }

      id = R.id.txtchilduser;
      TextView txtchilduser = rootView.findViewById(id);
      if (txtchilduser == null) {
        break missingId;
      }

      id = R.id.txtknwyour;
      TextView txtknwyour = rootView.findViewById(id);
      if (txtknwyour == null) {
        break missingId;
      }

      id = R.id.txtparentuser;
      TextView txtparentuser = rootView.findViewById(id);
      if (txtparentuser == null) {
        break missingId;
      }

      id = R.id.txtswitchuser;
      TextView txtswitchuser = rootView.findViewById(id);
      if (txtswitchuser == null) {
        break missingId;
      }

      return new DrawerHeaderBinding((LinearLayout) rootView, ivAdd, ivCancel, ivProfile,
          linearLayout, lstswitchChildUser, lstswitchuser, txtDetails, txtEntityName, txtErpID,
          txtFbaID, txtPospNo, txtReferalCode, txtchilduser, txtknwyour, txtparentuser,
          txtswitchuser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
