// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutApplicantDetailsHlBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox chkCoApplicant;

  @NonNull
  public final EditText etDOB;

  @NonNull
  public final EditText etDepreciation;

  @NonNull
  public final EditText etDirecPartRemuntion;

  @NonNull
  public final EditText etEMI;

  @NonNull
  public final EditText etMonthlyInc;

  @NonNull
  public final EditText etNameOfApplicant;

  @NonNull
  public final EditText etProfitAtTax;

  @NonNull
  public final EditText etTurnOver;

  @NonNull
  public final LinearLayout llSalaried;

  @NonNull
  public final LinearLayout llSelfEmployeed;

  @NonNull
  public final TextView textCoApplicant;

  @NonNull
  public final TextView txtSalaried;

  @NonNull
  public final TextView txtSelfEMp;

  @NonNull
  public final TextView txtrbimgFemale;

  @NonNull
  public final TextView txtrbimgMale;

  private LayoutApplicantDetailsHlBinding(@NonNull LinearLayout rootView,
      @NonNull CheckBox chkCoApplicant, @NonNull EditText etDOB, @NonNull EditText etDepreciation,
      @NonNull EditText etDirecPartRemuntion, @NonNull EditText etEMI,
      @NonNull EditText etMonthlyInc, @NonNull EditText etNameOfApplicant,
      @NonNull EditText etProfitAtTax, @NonNull EditText etTurnOver,
      @NonNull LinearLayout llSalaried, @NonNull LinearLayout llSelfEmployeed,
      @NonNull TextView textCoApplicant, @NonNull TextView txtSalaried,
      @NonNull TextView txtSelfEMp, @NonNull TextView txtrbimgFemale,
      @NonNull TextView txtrbimgMale) {
    this.rootView = rootView;
    this.chkCoApplicant = chkCoApplicant;
    this.etDOB = etDOB;
    this.etDepreciation = etDepreciation;
    this.etDirecPartRemuntion = etDirecPartRemuntion;
    this.etEMI = etEMI;
    this.etMonthlyInc = etMonthlyInc;
    this.etNameOfApplicant = etNameOfApplicant;
    this.etProfitAtTax = etProfitAtTax;
    this.etTurnOver = etTurnOver;
    this.llSalaried = llSalaried;
    this.llSelfEmployeed = llSelfEmployeed;
    this.textCoApplicant = textCoApplicant;
    this.txtSalaried = txtSalaried;
    this.txtSelfEMp = txtSelfEMp;
    this.txtrbimgFemale = txtrbimgFemale;
    this.txtrbimgMale = txtrbimgMale;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutApplicantDetailsHlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutApplicantDetailsHlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_applicant_details_hl, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutApplicantDetailsHlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chkCoApplicant;
      CheckBox chkCoApplicant = rootView.findViewById(id);
      if (chkCoApplicant == null) {
        break missingId;
      }

      id = R.id.et_DOB;
      EditText etDOB = rootView.findViewById(id);
      if (etDOB == null) {
        break missingId;
      }

      id = R.id.etDepreciation;
      EditText etDepreciation = rootView.findViewById(id);
      if (etDepreciation == null) {
        break missingId;
      }

      id = R.id.etDirecPartRemuntion;
      EditText etDirecPartRemuntion = rootView.findViewById(id);
      if (etDirecPartRemuntion == null) {
        break missingId;
      }

      id = R.id.etEMI;
      EditText etEMI = rootView.findViewById(id);
      if (etEMI == null) {
        break missingId;
      }

      id = R.id.etMonthlyInc;
      EditText etMonthlyInc = rootView.findViewById(id);
      if (etMonthlyInc == null) {
        break missingId;
      }

      id = R.id.etNameOfApplicant;
      EditText etNameOfApplicant = rootView.findViewById(id);
      if (etNameOfApplicant == null) {
        break missingId;
      }

      id = R.id.etProfitAtTax;
      EditText etProfitAtTax = rootView.findViewById(id);
      if (etProfitAtTax == null) {
        break missingId;
      }

      id = R.id.etTurnOver;
      EditText etTurnOver = rootView.findViewById(id);
      if (etTurnOver == null) {
        break missingId;
      }

      id = R.id.llSalaried;
      LinearLayout llSalaried = rootView.findViewById(id);
      if (llSalaried == null) {
        break missingId;
      }

      id = R.id.llSelfEmployeed;
      LinearLayout llSelfEmployeed = rootView.findViewById(id);
      if (llSelfEmployeed == null) {
        break missingId;
      }

      id = R.id.textCoApplicant;
      TextView textCoApplicant = rootView.findViewById(id);
      if (textCoApplicant == null) {
        break missingId;
      }

      id = R.id.txtSalaried;
      TextView txtSalaried = rootView.findViewById(id);
      if (txtSalaried == null) {
        break missingId;
      }

      id = R.id.txtSelfEMp;
      TextView txtSelfEMp = rootView.findViewById(id);
      if (txtSelfEMp == null) {
        break missingId;
      }

      id = R.id.txtrbimgFemale;
      TextView txtrbimgFemale = rootView.findViewById(id);
      if (txtrbimgFemale == null) {
        break missingId;
      }

      id = R.id.txtrbimgMale;
      TextView txtrbimgMale = rootView.findViewById(id);
      if (txtrbimgMale == null) {
        break missingId;
      }

      return new LayoutApplicantDetailsHlBinding((LinearLayout) rootView, chkCoApplicant, etDOB,
          etDepreciation, etDirecPartRemuntion, etEMI, etMonthlyInc, etNameOfApplicant,
          etProfitAtTax, etTurnOver, llSalaried, llSelfEmployeed, textCoApplicant, txtSalaried,
          txtSelfEMp, txtrbimgFemale, txtrbimgMale);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
