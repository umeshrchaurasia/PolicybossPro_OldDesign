// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PushNotifyItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgArrow;

  @NonNull
  public final ImageView imgBigNotify;

  @NonNull
  public final ImageView ivNotify;

  @NonNull
  public final LinearLayout lyParent;

  @NonNull
  public final RelativeLayout rlArrow;

  @NonNull
  public final RelativeLayout rlBigImg;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtMessage;

  @NonNull
  public final TextView txtStatus;

  @NonNull
  public final TextView txtTitle;

  @NonNull
  public final TextView txtbar;

  @NonNull
  public final View viewBigImg;

  private PushNotifyItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgArrow,
      @NonNull ImageView imgBigNotify, @NonNull ImageView ivNotify, @NonNull LinearLayout lyParent,
      @NonNull RelativeLayout rlArrow, @NonNull RelativeLayout rlBigImg, @NonNull TextView txtDate,
      @NonNull TextView txtMessage, @NonNull TextView txtStatus, @NonNull TextView txtTitle,
      @NonNull TextView txtbar, @NonNull View viewBigImg) {
    this.rootView = rootView;
    this.imgArrow = imgArrow;
    this.imgBigNotify = imgBigNotify;
    this.ivNotify = ivNotify;
    this.lyParent = lyParent;
    this.rlArrow = rlArrow;
    this.rlBigImg = rlBigImg;
    this.txtDate = txtDate;
    this.txtMessage = txtMessage;
    this.txtStatus = txtStatus;
    this.txtTitle = txtTitle;
    this.txtbar = txtbar;
    this.viewBigImg = viewBigImg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PushNotifyItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PushNotifyItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.push_notify_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PushNotifyItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgArrow;
      ImageView imgArrow = rootView.findViewById(id);
      if (imgArrow == null) {
        break missingId;
      }

      id = R.id.imgBigNotify;
      ImageView imgBigNotify = rootView.findViewById(id);
      if (imgBigNotify == null) {
        break missingId;
      }

      id = R.id.ivNotify;
      ImageView ivNotify = rootView.findViewById(id);
      if (ivNotify == null) {
        break missingId;
      }

      id = R.id.lyParent;
      LinearLayout lyParent = rootView.findViewById(id);
      if (lyParent == null) {
        break missingId;
      }

      id = R.id.rlArrow;
      RelativeLayout rlArrow = rootView.findViewById(id);
      if (rlArrow == null) {
        break missingId;
      }

      id = R.id.rlBigImg;
      RelativeLayout rlBigImg = rootView.findViewById(id);
      if (rlBigImg == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = rootView.findViewById(id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtMessage;
      TextView txtMessage = rootView.findViewById(id);
      if (txtMessage == null) {
        break missingId;
      }

      id = R.id.txtStatus;
      TextView txtStatus = rootView.findViewById(id);
      if (txtStatus == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = rootView.findViewById(id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtbar;
      TextView txtbar = rootView.findViewById(id);
      if (txtbar == null) {
        break missingId;
      }

      id = R.id.viewBigImg;
      View viewBigImg = rootView.findViewById(id);
      if (viewBigImg == null) {
        break missingId;
      }

      return new PushNotifyItemBinding((LinearLayout) rootView, imgArrow, imgBigNotify, ivNotify,
          lyParent, rlArrow, rlBigImg, txtDate, txtMessage, txtStatus, txtTitle, txtbar,
          viewBigImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
