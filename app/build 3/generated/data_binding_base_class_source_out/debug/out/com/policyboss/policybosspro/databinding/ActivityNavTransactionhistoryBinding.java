// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNavTransactionhistoryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ContentNavTransactionhistoryBinding inclNav;

  @NonNull
  public final LinearLayout llymessage;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView txtMessage;

  private ActivityNavTransactionhistoryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ContentNavTransactionhistoryBinding inclNav, @NonNull LinearLayout llymessage,
      @NonNull Toolbar toolbar, @NonNull TextView txtMessage) {
    this.rootView = rootView;
    this.inclNav = inclNav;
    this.llymessage = llymessage;
    this.toolbar = toolbar;
    this.txtMessage = txtMessage;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNavTransactionhistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNavTransactionhistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_nav_transactionhistory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNavTransactionhistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.incl_nav;
      View inclNav = rootView.findViewById(id);
      if (inclNav == null) {
        break missingId;
      }
      ContentNavTransactionhistoryBinding binding_inclNav = ContentNavTransactionhistoryBinding.bind(inclNav);

      id = R.id.llymessage;
      LinearLayout llymessage = rootView.findViewById(id);
      if (llymessage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txtMessage;
      TextView txtMessage = rootView.findViewById(id);
      if (txtMessage == null) {
        break missingId;
      }

      return new ActivityNavTransactionhistoryBinding((CoordinatorLayout) rootView, binding_inclNav,
          llymessage, toolbar, txtMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
