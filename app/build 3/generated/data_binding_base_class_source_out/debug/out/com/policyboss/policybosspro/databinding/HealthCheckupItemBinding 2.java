// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HealthCheckupItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivArrow;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final RecyclerView rvHealthCheckUpDetails;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvMrp;

  @NonNull
  public final TextView tvOfferPrice;

  @NonNull
  public final TextView tvPackName;

  private HealthCheckupItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivArrow,
      @NonNull ImageView ivShare, @NonNull RecyclerView rvHealthCheckUpDetails,
      @NonNull TextView tvCount, @NonNull TextView tvMrp, @NonNull TextView tvOfferPrice,
      @NonNull TextView tvPackName) {
    this.rootView = rootView;
    this.ivArrow = ivArrow;
    this.ivShare = ivShare;
    this.rvHealthCheckUpDetails = rvHealthCheckUpDetails;
    this.tvCount = tvCount;
    this.tvMrp = tvMrp;
    this.tvOfferPrice = tvOfferPrice;
    this.tvPackName = tvPackName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HealthCheckupItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HealthCheckupItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.health_checkup_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HealthCheckupItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivArrow;
      ImageView ivArrow = rootView.findViewById(id);
      if (ivArrow == null) {
        break missingId;
      }

      id = R.id.ivShare;
      ImageView ivShare = rootView.findViewById(id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.rvHealthCheckUpDetails;
      RecyclerView rvHealthCheckUpDetails = rootView.findViewById(id);
      if (rvHealthCheckUpDetails == null) {
        break missingId;
      }

      id = R.id.tvCount;
      TextView tvCount = rootView.findViewById(id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tvMrp;
      TextView tvMrp = rootView.findViewById(id);
      if (tvMrp == null) {
        break missingId;
      }

      id = R.id.tvOfferPrice;
      TextView tvOfferPrice = rootView.findViewById(id);
      if (tvOfferPrice == null) {
        break missingId;
      }

      id = R.id.tvPackName;
      TextView tvPackName = rootView.findViewById(id);
      if (tvPackName == null) {
        break missingId;
      }

      return new HealthCheckupItemBinding((LinearLayout) rootView, ivArrow, ivShare,
          rvHealthCheckUpDetails, tvCount, tvMrp, tvOfferPrice, tvPackName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
