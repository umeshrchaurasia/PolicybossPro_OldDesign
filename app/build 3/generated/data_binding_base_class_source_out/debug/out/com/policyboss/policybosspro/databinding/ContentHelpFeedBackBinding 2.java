// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentHelpFeedBackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cvAboutUs;

  @NonNull
  public final CardView cvChat;

  @NonNull
  public final CardView cvContactUs;

  @NonNull
  public final CardView cvDisclosure;

  @NonNull
  public final CardView cvRaiseTicket;

  private ContentHelpFeedBackBinding(@NonNull LinearLayout rootView, @NonNull CardView cvAboutUs,
      @NonNull CardView cvChat, @NonNull CardView cvContactUs, @NonNull CardView cvDisclosure,
      @NonNull CardView cvRaiseTicket) {
    this.rootView = rootView;
    this.cvAboutUs = cvAboutUs;
    this.cvChat = cvChat;
    this.cvContactUs = cvContactUs;
    this.cvDisclosure = cvDisclosure;
    this.cvRaiseTicket = cvRaiseTicket;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentHelpFeedBackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentHelpFeedBackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_help_feed_back, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentHelpFeedBackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvAboutUs;
      CardView cvAboutUs = rootView.findViewById(id);
      if (cvAboutUs == null) {
        break missingId;
      }

      id = R.id.cvChat;
      CardView cvChat = rootView.findViewById(id);
      if (cvChat == null) {
        break missingId;
      }

      id = R.id.cvContactUs;
      CardView cvContactUs = rootView.findViewById(id);
      if (cvContactUs == null) {
        break missingId;
      }

      id = R.id.cvDisclosure;
      CardView cvDisclosure = rootView.findViewById(id);
      if (cvDisclosure == null) {
        break missingId;
      }

      id = R.id.cvRaiseTicket;
      CardView cvRaiseTicket = rootView.findViewById(id);
      if (cvRaiseTicket == null) {
        break missingId;
      }

      return new ContentHelpFeedBackBinding((LinearLayout) rootView, cvAboutUs, cvChat, cvContactUs,
          cvDisclosure, cvRaiseTicket);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
