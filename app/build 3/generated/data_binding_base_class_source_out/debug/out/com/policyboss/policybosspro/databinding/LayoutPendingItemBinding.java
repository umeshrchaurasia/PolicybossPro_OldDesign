// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutPendingItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgInsurerLogo;

  @NonNull
  public final ImageView imgStatus;

  @NonNull
  public final TextView txtCategory;

  @NonNull
  public final TextView txtCustName;

  @NonNull
  public final TextView txtOverflowMenu;

  @NonNull
  public final TextView txtPendingDays;

  @NonNull
  public final TextView txtType;

  private LayoutPendingItemBinding(@NonNull CardView rootView, @NonNull ImageView imgInsurerLogo,
      @NonNull ImageView imgStatus, @NonNull TextView txtCategory, @NonNull TextView txtCustName,
      @NonNull TextView txtOverflowMenu, @NonNull TextView txtPendingDays,
      @NonNull TextView txtType) {
    this.rootView = rootView;
    this.imgInsurerLogo = imgInsurerLogo;
    this.imgStatus = imgStatus;
    this.txtCategory = txtCategory;
    this.txtCustName = txtCustName;
    this.txtOverflowMenu = txtOverflowMenu;
    this.txtPendingDays = txtPendingDays;
    this.txtType = txtType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutPendingItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutPendingItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_pending_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutPendingItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgInsurerLogo;
      ImageView imgInsurerLogo = rootView.findViewById(id);
      if (imgInsurerLogo == null) {
        break missingId;
      }

      id = R.id.imgStatus;
      ImageView imgStatus = rootView.findViewById(id);
      if (imgStatus == null) {
        break missingId;
      }

      id = R.id.txtCategory;
      TextView txtCategory = rootView.findViewById(id);
      if (txtCategory == null) {
        break missingId;
      }

      id = R.id.txtCustName;
      TextView txtCustName = rootView.findViewById(id);
      if (txtCustName == null) {
        break missingId;
      }

      id = R.id.txtOverflowMenu;
      TextView txtOverflowMenu = rootView.findViewById(id);
      if (txtOverflowMenu == null) {
        break missingId;
      }

      id = R.id.txtPendingDays;
      TextView txtPendingDays = rootView.findViewById(id);
      if (txtPendingDays == null) {
        break missingId;
      }

      id = R.id.txtType;
      TextView txtType = rootView.findViewById(id);
      if (txtType == null) {
        break missingId;
      }

      return new LayoutPendingItemBinding((CardView) rootView, imgInsurerLogo, imgStatus,
          txtCategory, txtCustName, txtOverflowMenu, txtPendingDays, txtType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
