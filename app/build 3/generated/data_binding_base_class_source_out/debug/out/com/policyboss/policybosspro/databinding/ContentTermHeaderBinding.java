// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentTermHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etDateofBirth;

  @NonNull
  public final EditText etFirstName;

  @NonNull
  public final EditText etLastName;

  @NonNull
  public final EditText etMobile;

  @NonNull
  public final EditText etfbaSearch;

  @NonNull
  public final LinearLayout llGender;

  @NonNull
  public final LinearLayout llSmoker;

  @NonNull
  public final LinearLayout llfbaSearch;

  @NonNull
  public final RadioButton rbfemale;

  @NonNull
  public final RadioButton rbmale;

  @NonNull
  public final RadioGroup rgGender;

  @NonNull
  public final TextView tvFemale;

  @NonNull
  public final TextView tvMale;

  @NonNull
  public final TextView tvNo;

  @NonNull
  public final TextView tvYes;

  private ContentTermHeaderBinding(@NonNull LinearLayout rootView, @NonNull EditText etDateofBirth,
      @NonNull EditText etFirstName, @NonNull EditText etLastName, @NonNull EditText etMobile,
      @NonNull EditText etfbaSearch, @NonNull LinearLayout llGender, @NonNull LinearLayout llSmoker,
      @NonNull LinearLayout llfbaSearch, @NonNull RadioButton rbfemale, @NonNull RadioButton rbmale,
      @NonNull RadioGroup rgGender, @NonNull TextView tvFemale, @NonNull TextView tvMale,
      @NonNull TextView tvNo, @NonNull TextView tvYes) {
    this.rootView = rootView;
    this.etDateofBirth = etDateofBirth;
    this.etFirstName = etFirstName;
    this.etLastName = etLastName;
    this.etMobile = etMobile;
    this.etfbaSearch = etfbaSearch;
    this.llGender = llGender;
    this.llSmoker = llSmoker;
    this.llfbaSearch = llfbaSearch;
    this.rbfemale = rbfemale;
    this.rbmale = rbmale;
    this.rgGender = rgGender;
    this.tvFemale = tvFemale;
    this.tvMale = tvMale;
    this.tvNo = tvNo;
    this.tvYes = tvYes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentTermHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentTermHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_term_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentTermHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etDateofBirth;
      EditText etDateofBirth = rootView.findViewById(id);
      if (etDateofBirth == null) {
        break missingId;
      }

      id = R.id.etFirstName;
      EditText etFirstName = rootView.findViewById(id);
      if (etFirstName == null) {
        break missingId;
      }

      id = R.id.etLastName;
      EditText etLastName = rootView.findViewById(id);
      if (etLastName == null) {
        break missingId;
      }

      id = R.id.etMobile;
      EditText etMobile = rootView.findViewById(id);
      if (etMobile == null) {
        break missingId;
      }

      id = R.id.etfbaSearch;
      EditText etfbaSearch = rootView.findViewById(id);
      if (etfbaSearch == null) {
        break missingId;
      }

      id = R.id.llGender;
      LinearLayout llGender = rootView.findViewById(id);
      if (llGender == null) {
        break missingId;
      }

      id = R.id.llSmoker;
      LinearLayout llSmoker = rootView.findViewById(id);
      if (llSmoker == null) {
        break missingId;
      }

      id = R.id.llfbaSearch;
      LinearLayout llfbaSearch = rootView.findViewById(id);
      if (llfbaSearch == null) {
        break missingId;
      }

      id = R.id.rbfemale;
      RadioButton rbfemale = rootView.findViewById(id);
      if (rbfemale == null) {
        break missingId;
      }

      id = R.id.rbmale;
      RadioButton rbmale = rootView.findViewById(id);
      if (rbmale == null) {
        break missingId;
      }

      id = R.id.rgGender;
      RadioGroup rgGender = rootView.findViewById(id);
      if (rgGender == null) {
        break missingId;
      }

      id = R.id.tvFemale;
      TextView tvFemale = rootView.findViewById(id);
      if (tvFemale == null) {
        break missingId;
      }

      id = R.id.tvMale;
      TextView tvMale = rootView.findViewById(id);
      if (tvMale == null) {
        break missingId;
      }

      id = R.id.tvNo;
      TextView tvNo = rootView.findViewById(id);
      if (tvNo == null) {
        break missingId;
      }

      id = R.id.tvYes;
      TextView tvYes = rootView.findViewById(id);
      if (tvYes == null) {
        break missingId;
      }

      return new ContentTermHeaderBinding((LinearLayout) rootView, etDateofBirth, etFirstName,
          etLastName, etMobile, etfbaSearch, llGender, llSmoker, llfbaSearch, rbfemale, rbmale,
          rgGender, tvFemale, tvMale, tvNo, tvYes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
