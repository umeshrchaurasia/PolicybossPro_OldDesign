// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTermIciciQuoteBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cvInputDetails;

  @NonNull
  public final CardView cvQuoteDetails;

  @NonNull
  public final EditText etICICIAccidentalBenefits;

  @NonNull
  public final EditText etICICICriticalIllness;

  @NonNull
  public final EditText etICICILumpSumpPerc;

  @NonNull
  public final EditText etICICIPolicyTerm;

  @NonNull
  public final EditText etICICIPremiumTerm;

  @NonNull
  public final EditText etICICISumAssured;

  @NonNull
  public final EditText etPincode;

  @NonNull
  public final TextView filter;

  @NonNull
  public final ImageView imgInsurerLogo;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final LinearLayout llAccidental;

  @NonNull
  public final LinearLayout llAddon;

  @NonNull
  public final LinearLayout llCritical;

  @NonNull
  public final LinearLayout llICICILumpSumpPerc;

  @NonNull
  public final Button minusICICIAcc;

  @NonNull
  public final Button minusICICICritical;

  @NonNull
  public final Button minusICICILumpSumpPerc;

  @NonNull
  public final Button minusICICIPTerm;

  @NonNull
  public final Button minusICICIPreTerm;

  @NonNull
  public final Button minusICICISum;

  @NonNull
  public final Button plusICICIAcc;

  @NonNull
  public final Button plusICICICritical;

  @NonNull
  public final Button plusICICILumpSumpPerc;

  @NonNull
  public final Button plusICICIPTerm;

  @NonNull
  public final Button plusICICIPreTerm;

  @NonNull
  public final Button plusICICISum;

  @NonNull
  public final RecyclerView rvAddOn;

  @NonNull
  public final Spinner spICICIOptions;

  @NonNull
  public final Spinner spICICIPremiumFrequency;

  @NonNull
  public final Spinner spICICIPremiumTerm;

  @NonNull
  public final TextView tvAge;

  @NonNull
  public final TextView tvCrn;

  @NonNull
  public final TextView tvGender;

  @NonNull
  public final TextView tvPolicyTerm;

  @NonNull
  public final TextView tvSmoker;

  @NonNull
  public final TextView tvSum;

  @NonNull
  public final TextView txtAge;

  @NonNull
  public final TextView txtCover;

  @NonNull
  public final TextView txtCustomise;

  @NonNull
  public final TextView txtFinalPremium;

  @NonNull
  public final TextView txtICICIIncreasingIncome;

  @NonNull
  public final TextView txtICICILumpSum;

  @NonNull
  public final TextView txtICICILumpSumRegular;

  @NonNull
  public final TextView txtICICIRegularIncome;

  @NonNull
  public final TextView txtPlanNAme;

  @NonNull
  public final TextView txtPolicyTerm;

  private FragmentTermIciciQuoteBinding(@NonNull RelativeLayout rootView,
      @NonNull CardView cvInputDetails, @NonNull CardView cvQuoteDetails,
      @NonNull EditText etICICIAccidentalBenefits, @NonNull EditText etICICICriticalIllness,
      @NonNull EditText etICICILumpSumpPerc, @NonNull EditText etICICIPolicyTerm,
      @NonNull EditText etICICIPremiumTerm, @NonNull EditText etICICISumAssured,
      @NonNull EditText etPincode, @NonNull TextView filter, @NonNull ImageView imgInsurerLogo,
      @NonNull ImageView ivEdit, @NonNull LinearLayout llAccidental, @NonNull LinearLayout llAddon,
      @NonNull LinearLayout llCritical, @NonNull LinearLayout llICICILumpSumpPerc,
      @NonNull Button minusICICIAcc, @NonNull Button minusICICICritical,
      @NonNull Button minusICICILumpSumpPerc, @NonNull Button minusICICIPTerm,
      @NonNull Button minusICICIPreTerm, @NonNull Button minusICICISum,
      @NonNull Button plusICICIAcc, @NonNull Button plusICICICritical,
      @NonNull Button plusICICILumpSumpPerc, @NonNull Button plusICICIPTerm,
      @NonNull Button plusICICIPreTerm, @NonNull Button plusICICISum, @NonNull RecyclerView rvAddOn,
      @NonNull Spinner spICICIOptions, @NonNull Spinner spICICIPremiumFrequency,
      @NonNull Spinner spICICIPremiumTerm, @NonNull TextView tvAge, @NonNull TextView tvCrn,
      @NonNull TextView tvGender, @NonNull TextView tvPolicyTerm, @NonNull TextView tvSmoker,
      @NonNull TextView tvSum, @NonNull TextView txtAge, @NonNull TextView txtCover,
      @NonNull TextView txtCustomise, @NonNull TextView txtFinalPremium,
      @NonNull TextView txtICICIIncreasingIncome, @NonNull TextView txtICICILumpSum,
      @NonNull TextView txtICICILumpSumRegular, @NonNull TextView txtICICIRegularIncome,
      @NonNull TextView txtPlanNAme, @NonNull TextView txtPolicyTerm) {
    this.rootView = rootView;
    this.cvInputDetails = cvInputDetails;
    this.cvQuoteDetails = cvQuoteDetails;
    this.etICICIAccidentalBenefits = etICICIAccidentalBenefits;
    this.etICICICriticalIllness = etICICICriticalIllness;
    this.etICICILumpSumpPerc = etICICILumpSumpPerc;
    this.etICICIPolicyTerm = etICICIPolicyTerm;
    this.etICICIPremiumTerm = etICICIPremiumTerm;
    this.etICICISumAssured = etICICISumAssured;
    this.etPincode = etPincode;
    this.filter = filter;
    this.imgInsurerLogo = imgInsurerLogo;
    this.ivEdit = ivEdit;
    this.llAccidental = llAccidental;
    this.llAddon = llAddon;
    this.llCritical = llCritical;
    this.llICICILumpSumpPerc = llICICILumpSumpPerc;
    this.minusICICIAcc = minusICICIAcc;
    this.minusICICICritical = minusICICICritical;
    this.minusICICILumpSumpPerc = minusICICILumpSumpPerc;
    this.minusICICIPTerm = minusICICIPTerm;
    this.minusICICIPreTerm = minusICICIPreTerm;
    this.minusICICISum = minusICICISum;
    this.plusICICIAcc = plusICICIAcc;
    this.plusICICICritical = plusICICICritical;
    this.plusICICILumpSumpPerc = plusICICILumpSumpPerc;
    this.plusICICIPTerm = plusICICIPTerm;
    this.plusICICIPreTerm = plusICICIPreTerm;
    this.plusICICISum = plusICICISum;
    this.rvAddOn = rvAddOn;
    this.spICICIOptions = spICICIOptions;
    this.spICICIPremiumFrequency = spICICIPremiumFrequency;
    this.spICICIPremiumTerm = spICICIPremiumTerm;
    this.tvAge = tvAge;
    this.tvCrn = tvCrn;
    this.tvGender = tvGender;
    this.tvPolicyTerm = tvPolicyTerm;
    this.tvSmoker = tvSmoker;
    this.tvSum = tvSum;
    this.txtAge = txtAge;
    this.txtCover = txtCover;
    this.txtCustomise = txtCustomise;
    this.txtFinalPremium = txtFinalPremium;
    this.txtICICIIncreasingIncome = txtICICIIncreasingIncome;
    this.txtICICILumpSum = txtICICILumpSum;
    this.txtICICILumpSumRegular = txtICICILumpSumRegular;
    this.txtICICIRegularIncome = txtICICIRegularIncome;
    this.txtPlanNAme = txtPlanNAme;
    this.txtPolicyTerm = txtPolicyTerm;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTermIciciQuoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTermIciciQuoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_term_icici_quote, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTermIciciQuoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvInputDetails;
      CardView cvInputDetails = rootView.findViewById(id);
      if (cvInputDetails == null) {
        break missingId;
      }

      id = R.id.cvQuoteDetails;
      CardView cvQuoteDetails = rootView.findViewById(id);
      if (cvQuoteDetails == null) {
        break missingId;
      }

      id = R.id.etICICIAccidentalBenefits;
      EditText etICICIAccidentalBenefits = rootView.findViewById(id);
      if (etICICIAccidentalBenefits == null) {
        break missingId;
      }

      id = R.id.etICICICriticalIllness;
      EditText etICICICriticalIllness = rootView.findViewById(id);
      if (etICICICriticalIllness == null) {
        break missingId;
      }

      id = R.id.etICICILumpSumpPerc;
      EditText etICICILumpSumpPerc = rootView.findViewById(id);
      if (etICICILumpSumpPerc == null) {
        break missingId;
      }

      id = R.id.etICICIPolicyTerm;
      EditText etICICIPolicyTerm = rootView.findViewById(id);
      if (etICICIPolicyTerm == null) {
        break missingId;
      }

      id = R.id.etICICIPremiumTerm;
      EditText etICICIPremiumTerm = rootView.findViewById(id);
      if (etICICIPremiumTerm == null) {
        break missingId;
      }

      id = R.id.etICICISumAssured;
      EditText etICICISumAssured = rootView.findViewById(id);
      if (etICICISumAssured == null) {
        break missingId;
      }

      id = R.id.etPincode;
      EditText etPincode = rootView.findViewById(id);
      if (etPincode == null) {
        break missingId;
      }

      id = R.id.filter;
      TextView filter = rootView.findViewById(id);
      if (filter == null) {
        break missingId;
      }

      id = R.id.imgInsurerLogo;
      ImageView imgInsurerLogo = rootView.findViewById(id);
      if (imgInsurerLogo == null) {
        break missingId;
      }

      id = R.id.ivEdit;
      ImageView ivEdit = rootView.findViewById(id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.llAccidental;
      LinearLayout llAccidental = rootView.findViewById(id);
      if (llAccidental == null) {
        break missingId;
      }

      id = R.id.llAddon;
      LinearLayout llAddon = rootView.findViewById(id);
      if (llAddon == null) {
        break missingId;
      }

      id = R.id.llCritical;
      LinearLayout llCritical = rootView.findViewById(id);
      if (llCritical == null) {
        break missingId;
      }

      id = R.id.llICICILumpSumpPerc;
      LinearLayout llICICILumpSumpPerc = rootView.findViewById(id);
      if (llICICILumpSumpPerc == null) {
        break missingId;
      }

      id = R.id.minusICICIAcc;
      Button minusICICIAcc = rootView.findViewById(id);
      if (minusICICIAcc == null) {
        break missingId;
      }

      id = R.id.minusICICICritical;
      Button minusICICICritical = rootView.findViewById(id);
      if (minusICICICritical == null) {
        break missingId;
      }

      id = R.id.minusICICILumpSumpPerc;
      Button minusICICILumpSumpPerc = rootView.findViewById(id);
      if (minusICICILumpSumpPerc == null) {
        break missingId;
      }

      id = R.id.minusICICIPTerm;
      Button minusICICIPTerm = rootView.findViewById(id);
      if (minusICICIPTerm == null) {
        break missingId;
      }

      id = R.id.minusICICIPreTerm;
      Button minusICICIPreTerm = rootView.findViewById(id);
      if (minusICICIPreTerm == null) {
        break missingId;
      }

      id = R.id.minusICICISum;
      Button minusICICISum = rootView.findViewById(id);
      if (minusICICISum == null) {
        break missingId;
      }

      id = R.id.plusICICIAcc;
      Button plusICICIAcc = rootView.findViewById(id);
      if (plusICICIAcc == null) {
        break missingId;
      }

      id = R.id.plusICICICritical;
      Button plusICICICritical = rootView.findViewById(id);
      if (plusICICICritical == null) {
        break missingId;
      }

      id = R.id.plusICICILumpSumpPerc;
      Button plusICICILumpSumpPerc = rootView.findViewById(id);
      if (plusICICILumpSumpPerc == null) {
        break missingId;
      }

      id = R.id.plusICICIPTerm;
      Button plusICICIPTerm = rootView.findViewById(id);
      if (plusICICIPTerm == null) {
        break missingId;
      }

      id = R.id.plusICICIPreTerm;
      Button plusICICIPreTerm = rootView.findViewById(id);
      if (plusICICIPreTerm == null) {
        break missingId;
      }

      id = R.id.plusICICISum;
      Button plusICICISum = rootView.findViewById(id);
      if (plusICICISum == null) {
        break missingId;
      }

      id = R.id.rvAddOn;
      RecyclerView rvAddOn = rootView.findViewById(id);
      if (rvAddOn == null) {
        break missingId;
      }

      id = R.id.spICICIOptions;
      Spinner spICICIOptions = rootView.findViewById(id);
      if (spICICIOptions == null) {
        break missingId;
      }

      id = R.id.spICICIPremiumFrequency;
      Spinner spICICIPremiumFrequency = rootView.findViewById(id);
      if (spICICIPremiumFrequency == null) {
        break missingId;
      }

      id = R.id.spICICIPremiumTerm;
      Spinner spICICIPremiumTerm = rootView.findViewById(id);
      if (spICICIPremiumTerm == null) {
        break missingId;
      }

      id = R.id.tvAge;
      TextView tvAge = rootView.findViewById(id);
      if (tvAge == null) {
        break missingId;
      }

      id = R.id.tvCrn;
      TextView tvCrn = rootView.findViewById(id);
      if (tvCrn == null) {
        break missingId;
      }

      id = R.id.tvGender;
      TextView tvGender = rootView.findViewById(id);
      if (tvGender == null) {
        break missingId;
      }

      id = R.id.tvPolicyTerm;
      TextView tvPolicyTerm = rootView.findViewById(id);
      if (tvPolicyTerm == null) {
        break missingId;
      }

      id = R.id.tvSmoker;
      TextView tvSmoker = rootView.findViewById(id);
      if (tvSmoker == null) {
        break missingId;
      }

      id = R.id.tvSum;
      TextView tvSum = rootView.findViewById(id);
      if (tvSum == null) {
        break missingId;
      }

      id = R.id.txtAge;
      TextView txtAge = rootView.findViewById(id);
      if (txtAge == null) {
        break missingId;
      }

      id = R.id.txtCover;
      TextView txtCover = rootView.findViewById(id);
      if (txtCover == null) {
        break missingId;
      }

      id = R.id.txtCustomise;
      TextView txtCustomise = rootView.findViewById(id);
      if (txtCustomise == null) {
        break missingId;
      }

      id = R.id.txtFinalPremium;
      TextView txtFinalPremium = rootView.findViewById(id);
      if (txtFinalPremium == null) {
        break missingId;
      }

      id = R.id.txtICICIIncreasingIncome;
      TextView txtICICIIncreasingIncome = rootView.findViewById(id);
      if (txtICICIIncreasingIncome == null) {
        break missingId;
      }

      id = R.id.txtICICILumpSum;
      TextView txtICICILumpSum = rootView.findViewById(id);
      if (txtICICILumpSum == null) {
        break missingId;
      }

      id = R.id.txtICICILumpSumRegular;
      TextView txtICICILumpSumRegular = rootView.findViewById(id);
      if (txtICICILumpSumRegular == null) {
        break missingId;
      }

      id = R.id.txtICICIRegularIncome;
      TextView txtICICIRegularIncome = rootView.findViewById(id);
      if (txtICICIRegularIncome == null) {
        break missingId;
      }

      id = R.id.txtPlanNAme;
      TextView txtPlanNAme = rootView.findViewById(id);
      if (txtPlanNAme == null) {
        break missingId;
      }

      id = R.id.txtPolicyTerm;
      TextView txtPolicyTerm = rootView.findViewById(id);
      if (txtPolicyTerm == null) {
        break missingId;
      }

      return new FragmentTermIciciQuoteBinding((RelativeLayout) rootView, cvInputDetails,
          cvQuoteDetails, etICICIAccidentalBenefits, etICICICriticalIllness, etICICILumpSumpPerc,
          etICICIPolicyTerm, etICICIPremiumTerm, etICICISumAssured, etPincode, filter,
          imgInsurerLogo, ivEdit, llAccidental, llAddon, llCritical, llICICILumpSumpPerc,
          minusICICIAcc, minusICICICritical, minusICICILumpSumpPerc, minusICICIPTerm,
          minusICICIPreTerm, minusICICISum, plusICICIAcc, plusICICICritical, plusICICILumpSumpPerc,
          plusICICIPTerm, plusICICIPreTerm, plusICICISum, rvAddOn, spICICIOptions,
          spICICIPremiumFrequency, spICICIPremiumTerm, tvAge, tvCrn, tvGender, tvPolicyTerm,
          tvSmoker, tvSum, txtAge, txtCover, txtCustomise, txtFinalPremium,
          txtICICIIncreasingIncome, txtICICILumpSum, txtICICILumpSumRegular, txtICICIRegularIncome,
          txtPlanNAme, txtPolicyTerm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
