// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCoAppdetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText coAppEtDOB;

  @NonNull
  public final EditText coAppEtDepreciation;

  @NonNull
  public final EditText coAppEtDirecPartRemuntion;

  @NonNull
  public final EditText coAppEtEMI;

  @NonNull
  public final EditText coAppEtMonthlyInc;

  @NonNull
  public final EditText coAppEtNameOfApplicant;

  @NonNull
  public final EditText coAppEtProfitAtTax;

  @NonNull
  public final EditText coAppEtTurnOver;

  @NonNull
  public final LinearLayout coAppLlSalaried;

  @NonNull
  public final LinearLayout coAppLlSelfEmployeed;

  @NonNull
  public final LinearLayout coAppLlView1MothlyIncome;

  @NonNull
  public final Spinner coAppSbRelation;

  @NonNull
  public final TextView txtCoSalaried;

  @NonNull
  public final TextView txtCoSelfEMp;

  @NonNull
  public final TextView txtcoAppRbimgFemale;

  @NonNull
  public final TextView txtcoAppRbimgMale;

  private LayoutCoAppdetailBinding(@NonNull LinearLayout rootView, @NonNull EditText coAppEtDOB,
      @NonNull EditText coAppEtDepreciation, @NonNull EditText coAppEtDirecPartRemuntion,
      @NonNull EditText coAppEtEMI, @NonNull EditText coAppEtMonthlyInc,
      @NonNull EditText coAppEtNameOfApplicant, @NonNull EditText coAppEtProfitAtTax,
      @NonNull EditText coAppEtTurnOver, @NonNull LinearLayout coAppLlSalaried,
      @NonNull LinearLayout coAppLlSelfEmployeed, @NonNull LinearLayout coAppLlView1MothlyIncome,
      @NonNull Spinner coAppSbRelation, @NonNull TextView txtCoSalaried,
      @NonNull TextView txtCoSelfEMp, @NonNull TextView txtcoAppRbimgFemale,
      @NonNull TextView txtcoAppRbimgMale) {
    this.rootView = rootView;
    this.coAppEtDOB = coAppEtDOB;
    this.coAppEtDepreciation = coAppEtDepreciation;
    this.coAppEtDirecPartRemuntion = coAppEtDirecPartRemuntion;
    this.coAppEtEMI = coAppEtEMI;
    this.coAppEtMonthlyInc = coAppEtMonthlyInc;
    this.coAppEtNameOfApplicant = coAppEtNameOfApplicant;
    this.coAppEtProfitAtTax = coAppEtProfitAtTax;
    this.coAppEtTurnOver = coAppEtTurnOver;
    this.coAppLlSalaried = coAppLlSalaried;
    this.coAppLlSelfEmployeed = coAppLlSelfEmployeed;
    this.coAppLlView1MothlyIncome = coAppLlView1MothlyIncome;
    this.coAppSbRelation = coAppSbRelation;
    this.txtCoSalaried = txtCoSalaried;
    this.txtCoSelfEMp = txtCoSelfEMp;
    this.txtcoAppRbimgFemale = txtcoAppRbimgFemale;
    this.txtcoAppRbimgMale = txtcoAppRbimgMale;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCoAppdetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCoAppdetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_co_appdetail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCoAppdetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coApp_et_DOB;
      EditText coAppEtDOB = rootView.findViewById(id);
      if (coAppEtDOB == null) {
        break missingId;
      }

      id = R.id.coApp_etDepreciation;
      EditText coAppEtDepreciation = rootView.findViewById(id);
      if (coAppEtDepreciation == null) {
        break missingId;
      }

      id = R.id.coApp_etDirecPartRemuntion;
      EditText coAppEtDirecPartRemuntion = rootView.findViewById(id);
      if (coAppEtDirecPartRemuntion == null) {
        break missingId;
      }

      id = R.id.coApp_etEMI;
      EditText coAppEtEMI = rootView.findViewById(id);
      if (coAppEtEMI == null) {
        break missingId;
      }

      id = R.id.coApp_etMonthlyInc;
      EditText coAppEtMonthlyInc = rootView.findViewById(id);
      if (coAppEtMonthlyInc == null) {
        break missingId;
      }

      id = R.id.coApp_etNameOfApplicant;
      EditText coAppEtNameOfApplicant = rootView.findViewById(id);
      if (coAppEtNameOfApplicant == null) {
        break missingId;
      }

      id = R.id.coApp_etProfitAtTax;
      EditText coAppEtProfitAtTax = rootView.findViewById(id);
      if (coAppEtProfitAtTax == null) {
        break missingId;
      }

      id = R.id.coApp_etTurnOver;
      EditText coAppEtTurnOver = rootView.findViewById(id);
      if (coAppEtTurnOver == null) {
        break missingId;
      }

      id = R.id.coApp_llSalaried;
      LinearLayout coAppLlSalaried = rootView.findViewById(id);
      if (coAppLlSalaried == null) {
        break missingId;
      }

      id = R.id.coApp_llSelfEmployeed;
      LinearLayout coAppLlSelfEmployeed = rootView.findViewById(id);
      if (coAppLlSelfEmployeed == null) {
        break missingId;
      }

      id = R.id.coApp_llView1MothlyIncome;
      LinearLayout coAppLlView1MothlyIncome = rootView.findViewById(id);
      if (coAppLlView1MothlyIncome == null) {
        break missingId;
      }

      id = R.id.coApp_sbRelation;
      Spinner coAppSbRelation = rootView.findViewById(id);
      if (coAppSbRelation == null) {
        break missingId;
      }

      id = R.id.txtCoSalaried;
      TextView txtCoSalaried = rootView.findViewById(id);
      if (txtCoSalaried == null) {
        break missingId;
      }

      id = R.id.txtCoSelfEMp;
      TextView txtCoSelfEMp = rootView.findViewById(id);
      if (txtCoSelfEMp == null) {
        break missingId;
      }

      id = R.id.txtco_app_rbimgFemale;
      TextView txtcoAppRbimgFemale = rootView.findViewById(id);
      if (txtcoAppRbimgFemale == null) {
        break missingId;
      }

      id = R.id.txtco_app_rbimgMale;
      TextView txtcoAppRbimgMale = rootView.findViewById(id);
      if (txtcoAppRbimgMale == null) {
        break missingId;
      }

      return new LayoutCoAppdetailBinding((LinearLayout) rootView, coAppEtDOB, coAppEtDepreciation,
          coAppEtDirecPartRemuntion, coAppEtEMI, coAppEtMonthlyInc, coAppEtNameOfApplicant,
          coAppEtProfitAtTax, coAppEtTurnOver, coAppLlSalaried, coAppLlSelfEmployeed,
          coAppLlView1MothlyIncome, coAppSbRelation, txtCoSalaried, txtCoSelfEMp,
          txtcoAppRbimgFemale, txtcoAppRbimgMale);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
