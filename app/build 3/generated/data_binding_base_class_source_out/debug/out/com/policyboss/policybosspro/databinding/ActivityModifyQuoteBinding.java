// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.adw.library.widgets.discreteseekbar.DiscreteSeekBar;

public final class ActivityModifyQuoteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button applyNow;

  @NonNull
  public final EditText etElecAcc;

  @NonNull
  public final EditText etIdv;

  @NonNull
  public final EditText etNonElecAcc;

  @NonNull
  public final ImageView ivCross;

  @NonNull
  public final TextView lblPAMsg;

  @NonNull
  public final DiscreteSeekBar sbIdv;

  @NonNull
  public final Spinner spPaCover;

  @NonNull
  public final Spinner spVolExcessAmt;

  @NonNull
  public final TextView tvAntiNo;

  @NonNull
  public final TextView tvAntiYes;

  @NonNull
  public final TextView tvLiabNo;

  @NonNull
  public final TextView tvLiabYes;

  @NonNull
  public final TextView tvMaxIdv;

  @NonNull
  public final TextView tvMinIdv;

  @NonNull
  public final TextView tvPACoverODNo;

  @NonNull
  public final TextView tvPACoverODYes;

  @NonNull
  public final TextView tvProgress;

  @NonNull
  public final TextView txtPlanName;

  private ActivityModifyQuoteBinding(@NonNull LinearLayout rootView, @NonNull Button applyNow,
      @NonNull EditText etElecAcc, @NonNull EditText etIdv, @NonNull EditText etNonElecAcc,
      @NonNull ImageView ivCross, @NonNull TextView lblPAMsg, @NonNull DiscreteSeekBar sbIdv,
      @NonNull Spinner spPaCover, @NonNull Spinner spVolExcessAmt, @NonNull TextView tvAntiNo,
      @NonNull TextView tvAntiYes, @NonNull TextView tvLiabNo, @NonNull TextView tvLiabYes,
      @NonNull TextView tvMaxIdv, @NonNull TextView tvMinIdv, @NonNull TextView tvPACoverODNo,
      @NonNull TextView tvPACoverODYes, @NonNull TextView tvProgress,
      @NonNull TextView txtPlanName) {
    this.rootView = rootView;
    this.applyNow = applyNow;
    this.etElecAcc = etElecAcc;
    this.etIdv = etIdv;
    this.etNonElecAcc = etNonElecAcc;
    this.ivCross = ivCross;
    this.lblPAMsg = lblPAMsg;
    this.sbIdv = sbIdv;
    this.spPaCover = spPaCover;
    this.spVolExcessAmt = spVolExcessAmt;
    this.tvAntiNo = tvAntiNo;
    this.tvAntiYes = tvAntiYes;
    this.tvLiabNo = tvLiabNo;
    this.tvLiabYes = tvLiabYes;
    this.tvMaxIdv = tvMaxIdv;
    this.tvMinIdv = tvMinIdv;
    this.tvPACoverODNo = tvPACoverODNo;
    this.tvPACoverODYes = tvPACoverODYes;
    this.tvProgress = tvProgress;
    this.txtPlanName = txtPlanName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityModifyQuoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityModifyQuoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_modify_quote, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityModifyQuoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.applyNow;
      Button applyNow = rootView.findViewById(id);
      if (applyNow == null) {
        break missingId;
      }

      id = R.id.etElecAcc;
      EditText etElecAcc = rootView.findViewById(id);
      if (etElecAcc == null) {
        break missingId;
      }

      id = R.id.etIdv;
      EditText etIdv = rootView.findViewById(id);
      if (etIdv == null) {
        break missingId;
      }

      id = R.id.etNonElecAcc;
      EditText etNonElecAcc = rootView.findViewById(id);
      if (etNonElecAcc == null) {
        break missingId;
      }

      id = R.id.ivCross;
      ImageView ivCross = rootView.findViewById(id);
      if (ivCross == null) {
        break missingId;
      }

      id = R.id.lblPAMsg;
      TextView lblPAMsg = rootView.findViewById(id);
      if (lblPAMsg == null) {
        break missingId;
      }

      id = R.id.sbIdv;
      DiscreteSeekBar sbIdv = rootView.findViewById(id);
      if (sbIdv == null) {
        break missingId;
      }

      id = R.id.spPaCover;
      Spinner spPaCover = rootView.findViewById(id);
      if (spPaCover == null) {
        break missingId;
      }

      id = R.id.spVolExcessAmt;
      Spinner spVolExcessAmt = rootView.findViewById(id);
      if (spVolExcessAmt == null) {
        break missingId;
      }

      id = R.id.tvAntiNo;
      TextView tvAntiNo = rootView.findViewById(id);
      if (tvAntiNo == null) {
        break missingId;
      }

      id = R.id.tvAntiYes;
      TextView tvAntiYes = rootView.findViewById(id);
      if (tvAntiYes == null) {
        break missingId;
      }

      id = R.id.tvLiabNo;
      TextView tvLiabNo = rootView.findViewById(id);
      if (tvLiabNo == null) {
        break missingId;
      }

      id = R.id.tvLiabYes;
      TextView tvLiabYes = rootView.findViewById(id);
      if (tvLiabYes == null) {
        break missingId;
      }

      id = R.id.tvMaxIdv;
      TextView tvMaxIdv = rootView.findViewById(id);
      if (tvMaxIdv == null) {
        break missingId;
      }

      id = R.id.tvMinIdv;
      TextView tvMinIdv = rootView.findViewById(id);
      if (tvMinIdv == null) {
        break missingId;
      }

      id = R.id.tvPACoverODNo;
      TextView tvPACoverODNo = rootView.findViewById(id);
      if (tvPACoverODNo == null) {
        break missingId;
      }

      id = R.id.tvPACoverODYes;
      TextView tvPACoverODYes = rootView.findViewById(id);
      if (tvPACoverODYes == null) {
        break missingId;
      }

      id = R.id.tvProgress;
      TextView tvProgress = rootView.findViewById(id);
      if (tvProgress == null) {
        break missingId;
      }

      id = R.id.txtPlanName;
      TextView txtPlanName = rootView.findViewById(id);
      if (txtPlanName == null) {
        break missingId;
      }

      return new ActivityModifyQuoteBinding((LinearLayout) rootView, applyNow, etElecAcc, etIdv,
          etNonElecAcc, ivCross, lblPAMsg, sbIdv, spPaCover, spVolExcessAmt, tvAntiNo, tvAntiYes,
          tvLiabNo, tvLiabYes, tvMaxIdv, tvMinIdv, tvPACoverODNo, tvPACoverODYes, tvProgress,
          txtPlanName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
