// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardRvItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imgIcon;

  @NonNull
  public final ImageView imgInfo;

  @NonNull
  public final ImageView imgNew;

  @NonNull
  public final ImageView imgShare;

  @NonNull
  public final LinearLayout lyMain;

  @NonNull
  public final LinearLayout lyParent;

  @NonNull
  public final TextView txtProductDesc;

  @NonNull
  public final TextView txtProductName;

  private DashboardRvItemBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull ImageView imgIcon, @NonNull ImageView imgInfo, @NonNull ImageView imgNew,
      @NonNull ImageView imgShare, @NonNull LinearLayout lyMain, @NonNull LinearLayout lyParent,
      @NonNull TextView txtProductDesc, @NonNull TextView txtProductName) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.imgIcon = imgIcon;
    this.imgInfo = imgInfo;
    this.imgNew = imgNew;
    this.imgShare = imgShare;
    this.lyMain = lyMain;
    this.lyParent = lyParent;
    this.txtProductDesc = txtProductDesc;
    this.txtProductName = txtProductName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardRvItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardRvItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_rv_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardRvItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.imgIcon;
      ImageView imgIcon = rootView.findViewById(id);
      if (imgIcon == null) {
        break missingId;
      }

      id = R.id.imgInfo;
      ImageView imgInfo = rootView.findViewById(id);
      if (imgInfo == null) {
        break missingId;
      }

      id = R.id.imgNew;
      ImageView imgNew = rootView.findViewById(id);
      if (imgNew == null) {
        break missingId;
      }

      id = R.id.imgShare;
      ImageView imgShare = rootView.findViewById(id);
      if (imgShare == null) {
        break missingId;
      }

      LinearLayout lyMain = (LinearLayout) rootView;

      id = R.id.lyParent;
      LinearLayout lyParent = rootView.findViewById(id);
      if (lyParent == null) {
        break missingId;
      }

      id = R.id.txtProductDesc;
      TextView txtProductDesc = rootView.findViewById(id);
      if (txtProductDesc == null) {
        break missingId;
      }

      id = R.id.txtProductName;
      TextView txtProductName = rootView.findViewById(id);
      if (txtProductName == null) {
        break missingId;
      }

      return new DashboardRvItemBinding((LinearLayout) rootView, cardView, imgIcon, imgInfo, imgNew,
          imgShare, lyMain, lyParent, txtProductDesc, txtProductName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
