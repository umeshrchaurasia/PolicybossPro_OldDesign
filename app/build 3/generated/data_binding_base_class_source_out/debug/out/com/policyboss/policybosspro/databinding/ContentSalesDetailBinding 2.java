// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentSalesDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView rvCompany;

  @NonNull
  public final RecyclerView rvProduct;

  @NonNull
  public final Switch swlang;

  @NonNull
  public final TextView txtEng;

  @NonNull
  public final TextView txtHindi;

  private ContentSalesDetailBinding(@NonNull LinearLayout rootView, @NonNull RecyclerView rvCompany,
      @NonNull RecyclerView rvProduct, @NonNull Switch swlang, @NonNull TextView txtEng,
      @NonNull TextView txtHindi) {
    this.rootView = rootView;
    this.rvCompany = rvCompany;
    this.rvProduct = rvProduct;
    this.swlang = swlang;
    this.txtEng = txtEng;
    this.txtHindi = txtHindi;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentSalesDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentSalesDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_sales_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentSalesDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rvCompany;
      RecyclerView rvCompany = rootView.findViewById(id);
      if (rvCompany == null) {
        break missingId;
      }

      id = R.id.rvProduct;
      RecyclerView rvProduct = rootView.findViewById(id);
      if (rvProduct == null) {
        break missingId;
      }

      id = R.id.swlang;
      Switch swlang = rootView.findViewById(id);
      if (swlang == null) {
        break missingId;
      }

      id = R.id.txtEng;
      TextView txtEng = rootView.findViewById(id);
      if (txtEng == null) {
        break missingId;
      }

      id = R.id.txtHindi;
      TextView txtHindi = rootView.findViewById(id);
      if (txtHindi == null) {
        break missingId;
      }

      return new ContentSalesDetailBinding((LinearLayout) rootView, rvCompany, rvProduct, swlang,
          txtEng, txtHindi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
