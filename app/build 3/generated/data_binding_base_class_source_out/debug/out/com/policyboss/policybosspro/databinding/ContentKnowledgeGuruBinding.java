// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentKnowledgeGuruBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView insurance;

  @NonNull
  public final CardView loan;

  @NonNull
  public final CardView other;

  private ContentKnowledgeGuruBinding(@NonNull LinearLayout rootView, @NonNull CardView insurance,
      @NonNull CardView loan, @NonNull CardView other) {
    this.rootView = rootView;
    this.insurance = insurance;
    this.loan = loan;
    this.other = other;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentKnowledgeGuruBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentKnowledgeGuruBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_knowledge_guru, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentKnowledgeGuruBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.insurance;
      CardView insurance = rootView.findViewById(id);
      if (insurance == null) {
        break missingId;
      }

      id = R.id.loan;
      CardView loan = rootView.findViewById(id);
      if (loan == null) {
        break missingId;
      }

      id = R.id.other;
      CardView other = rootView.findViewById(id);
      if (other == null) {
        break missingId;
      }

      return new ContentKnowledgeGuruBinding((LinearLayout) rootView, insurance, loan, other);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
