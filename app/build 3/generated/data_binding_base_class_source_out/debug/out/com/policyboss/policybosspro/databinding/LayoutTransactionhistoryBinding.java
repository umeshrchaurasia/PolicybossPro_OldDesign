// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutTransactionhistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardViewSpinner;

  @NonNull
  public final LinearLayout lyParent;

  @NonNull
  public final TextView textVieaaAssign;

  @NonNull
  public final TextView textVieawAssign;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView textViewAs1sign;

  @NonNull
  public final TextView txtCompany;

  @NonNull
  public final TextView txtCustName;

  @NonNull
  public final TextView txtEntryDate;

  @NonNull
  public final TextView txtEntryNo;

  @NonNull
  public final TextView txtInceptionDate;

  @NonNull
  public final TextView txtPremium;

  @NonNull
  public final TextView txtTotalOD;

  private LayoutTransactionhistoryBinding(@NonNull LinearLayout rootView,
      @NonNull CardView cardViewSpinner, @NonNull LinearLayout lyParent,
      @NonNull TextView textVieaaAssign, @NonNull TextView textVieawAssign,
      @NonNull TextView textView9, @NonNull TextView textViewAs1sign, @NonNull TextView txtCompany,
      @NonNull TextView txtCustName, @NonNull TextView txtEntryDate, @NonNull TextView txtEntryNo,
      @NonNull TextView txtInceptionDate, @NonNull TextView txtPremium,
      @NonNull TextView txtTotalOD) {
    this.rootView = rootView;
    this.cardViewSpinner = cardViewSpinner;
    this.lyParent = lyParent;
    this.textVieaaAssign = textVieaaAssign;
    this.textVieawAssign = textVieawAssign;
    this.textView9 = textView9;
    this.textViewAs1sign = textViewAs1sign;
    this.txtCompany = txtCompany;
    this.txtCustName = txtCustName;
    this.txtEntryDate = txtEntryDate;
    this.txtEntryNo = txtEntryNo;
    this.txtInceptionDate = txtInceptionDate;
    this.txtPremium = txtPremium;
    this.txtTotalOD = txtTotalOD;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutTransactionhistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutTransactionhistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_transactionhistory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutTransactionhistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view_spinner;
      CardView cardViewSpinner = rootView.findViewById(id);
      if (cardViewSpinner == null) {
        break missingId;
      }

      id = R.id.lyParent;
      LinearLayout lyParent = rootView.findViewById(id);
      if (lyParent == null) {
        break missingId;
      }

      id = R.id.textVieaaAssign;
      TextView textVieaaAssign = rootView.findViewById(id);
      if (textVieaaAssign == null) {
        break missingId;
      }

      id = R.id.textVieawAssign;
      TextView textVieawAssign = rootView.findViewById(id);
      if (textVieawAssign == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = rootView.findViewById(id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.textViewAs1sign;
      TextView textViewAs1sign = rootView.findViewById(id);
      if (textViewAs1sign == null) {
        break missingId;
      }

      id = R.id.txtCompany;
      TextView txtCompany = rootView.findViewById(id);
      if (txtCompany == null) {
        break missingId;
      }

      id = R.id.txtCustName;
      TextView txtCustName = rootView.findViewById(id);
      if (txtCustName == null) {
        break missingId;
      }

      id = R.id.txtEntryDate;
      TextView txtEntryDate = rootView.findViewById(id);
      if (txtEntryDate == null) {
        break missingId;
      }

      id = R.id.txtEntryNo;
      TextView txtEntryNo = rootView.findViewById(id);
      if (txtEntryNo == null) {
        break missingId;
      }

      id = R.id.txtInceptionDate;
      TextView txtInceptionDate = rootView.findViewById(id);
      if (txtInceptionDate == null) {
        break missingId;
      }

      id = R.id.txtPremium;
      TextView txtPremium = rootView.findViewById(id);
      if (txtPremium == null) {
        break missingId;
      }

      id = R.id.txtTotal_OD;
      TextView txtTotalOD = rootView.findViewById(id);
      if (txtTotalOD == null) {
        break missingId;
      }

      return new LayoutTransactionhistoryBinding((LinearLayout) rootView, cardViewSpinner, lyParent,
          textVieaaAssign, textVieawAssign, textView9, textViewAs1sign, txtCompany, txtCustName,
          txtEntryDate, txtEntryNo, txtInceptionDate, txtPremium, txtTotalOD);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
