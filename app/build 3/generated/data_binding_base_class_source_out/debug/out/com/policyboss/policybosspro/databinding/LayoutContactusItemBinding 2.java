// Generated by view binder compiler. Do not edit!
package com.policyboss.policybosspro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.policyboss.policybosspro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutContactusItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvDisplayTitle;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvSupportNo;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvWebsite;

  private LayoutContactusItemBinding(@NonNull LinearLayout rootView,
      @NonNull TextView tvDisplayTitle, @NonNull TextView tvEmail, @NonNull TextView tvSupportNo,
      @NonNull TextView tvTitle, @NonNull TextView tvWebsite) {
    this.rootView = rootView;
    this.tvDisplayTitle = tvDisplayTitle;
    this.tvEmail = tvEmail;
    this.tvSupportNo = tvSupportNo;
    this.tvTitle = tvTitle;
    this.tvWebsite = tvWebsite;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutContactusItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutContactusItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_contactus_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutContactusItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvDisplayTitle;
      TextView tvDisplayTitle = rootView.findViewById(id);
      if (tvDisplayTitle == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      TextView tvEmail = rootView.findViewById(id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvSupportNo;
      TextView tvSupportNo = rootView.findViewById(id);
      if (tvSupportNo == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvWebsite;
      TextView tvWebsite = rootView.findViewById(id);
      if (tvWebsite == null) {
        break missingId;
      }

      return new LayoutContactusItemBinding((LinearLayout) rootView, tvDisplayTitle, tvEmail,
          tvSupportNo, tvTitle, tvWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
